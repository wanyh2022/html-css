[Script Info]
Title: 039 CSS Theory #4_ Types of Boxes_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1A34y1e7wL?p=37&vd_source=22f66c56d922dc2e7eaab1492700a954
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:01.28,0:00:04.07,*Default,NTP,0000,0000,0000,,所以，既然你已经掌握了基础知识
Dialogue: 0,0:00:04.07,0:00:06.06,*Default,NTP,0000,0000,0000,,盒子模型下来，
Dialogue: 0,0:00:06.06,0:00:10.04,*Default,NTP,0000,0000,0000,,让我们更进一步，谈谈不同的类型
Dialogue: 0,0:00:10.04,0:00:13.32,*Default,NTP,0000,0000,0000,,盒子模型中存在的盒子数量。
Dialogue: 0,0:00:15.34,0:00:17.31,*Default,NTP,0000,0000,0000,,也许你已经注意到
Dialogue: 0,0:00:17.31,0:00:21.88,*Default,NTP,0000,0000,0000,,CSS中有不同类型的框。
Dialogue: 0,0:00:21.88,0:00:25.48,*Default,NTP,0000,0000,0000,,因此，让我们在这里检查这个元素以向您展示我的意思。
Dialogue: 0,0:00:29.67,0:00:30.91,*Default,NTP,0000,0000,0000,,所以这个，例如，
Dialogue: 0,0:00:30.91,0:00:35.60,*Default,NTP,0000,0000,0000,,你会看到这个 h2 元素占据了所有的空间
Dialogue: 0,0:00:35.60,0:00:37.34,*Default,NTP,0000,0000,0000,,它可以占据，
Dialogue: 0,0:00:37.34,0:00:40.32,*Default,NTP,0000,0000,0000,,所以基本上它从左边一直走
Dialogue: 0,0:00:40.32,0:00:43.26,*Default,NTP,0000,0000,0000,,在右边，对吧？
Dialogue: 0,0:00:43.26,0:00:47.22,*Default,NTP,0000,0000,0000,,同样如此，例如，对于整个标题，
Dialogue: 0,0:00:47.22,0:00:51.71,*Default,NTP,0000,0000,0000,,当然，对于整篇文章和标题也是如此。
Dialogue: 0,0:00:51.71,0:00:55.13,*Default,NTP,0000,0000,0000,,而且真的大部分元素都是这样的，
Dialogue: 0,0:00:55.13,0:00:57.41,*Default,NTP,0000,0000,0000,,但还有其他元素。
Dialogue: 0,0:00:57.41,0:01:01.23,*Default,NTP,0000,0000,0000,,所以其他盒子可以这么说，比如这个。
Dialogue: 0,0:01:02.25,0:01:04.69,*Default,NTP,0000,0000,0000,,所以这里我们有这个强大的元素，
Dialogue: 0,0:01:04.69,0:01:08.37,*Default,NTP,0000,0000,0000,,但你看到它只占据了空间
Dialogue: 0,0:01:08.37,0:01:10.93,*Default,NTP,0000,0000,0000,,它的内容实际上在哪里。
Dialogue: 0,0:01:10.93,0:01:13.38,*Default,NTP,0000,0000,0000,,同样的事情也是如此，例如，
Dialogue: 0,0:01:13.38,0:01:14.99,*Default,NTP,0000,0000,0000,,对于这个图像在这里。
Dialogue: 0,0:01:16.04,0:01:19.48,*Default,NTP,0000,0000,0000,,所以你会看到，它只有 50x50 像素，
Dialogue: 0,0:01:19.48,0:01:23.52,*Default,NTP,0000,0000,0000,,这正是内容本身的大小。
Dialogue: 0,0:01:23.52,0:01:28.12,*Default,NTP,0000,0000,0000,,例如，这里的锚标签也是一样的，
Dialogue: 0,0:01:28.12,0:01:30.28,*Default,NTP,0000,0000,0000,,您现在将再次看到
Dialogue: 0,0:01:30.28,0:01:32.75,*Default,NTP,0000,0000,0000,,它恰好占据了宽度
Dialogue: 0,0:01:32.75,0:01:35.45,*Default,NTP,0000,0000,0000,,这是其内容所必需的。
Dialogue: 0,0:01:35.45,0:01:38.27,*Default,NTP,0000,0000,0000,,所以这些类型的盒子只占
Dialogue: 0,0:01:38.27,0:01:41.79,*Default,NTP,0000,0000,0000,,正是他们内容所需的空间
Dialogue: 0,0:01:41.79,0:01:44.52,*Default,NTP,0000,0000,0000,,就是我们所说的内联框，
Dialogue: 0,0:01:44.52,0:01:47.42,*Default,NTP,0000,0000,0000,,另一方面，所有这些其他盒子。
Dialogue: 0,0:01:48.75,0:01:53.18,*Default,NTP,0000,0000,0000,,例如，这个段落，或者这个 h3 标题，
Dialogue: 0,0:01:53.18,0:01:58.10,*Default,NTP,0000,0000,0000,,这些我们称为块级框或块级元素。
Dialogue: 0,0:01:58.10,0:02:01.03,*Default,NTP,0000,0000,0000,,所以块级元素或框
Dialogue: 0,0:02:01.03,0:02:03.78,*Default,NTP,0000,0000,0000,,尽可能占据所有空间，
Dialogue: 0,0:02:03.78,0:02:07.39,*Default,NTP,0000,0000,0000,,他们基本上在他们之后创建换行符。
Dialogue: 0,0:02:07.39,0:02:08.41,*Default,NTP,0000,0000,0000,,或者换句话说，
Dialogue: 0,0:02:08.41,0:02:12.84,*Default,NTP,0000,0000,0000,,他们不能并排在一起，对吧？
Dialogue: 0,0:02:12.84,0:02:13.77,*Default,NTP,0000,0000,0000,,所以当然，
Dialogue: 0,0:02:13.77,0:02:16.95,*Default,NTP,0000,0000,0000,,如果他们横向占据了他们需要的所有空间，
Dialogue: 0,0:02:16.95,0:02:20.40,*Default,NTP,0000,0000,0000,,那么他们当然不能并排。
Dialogue: 0,0:02:20.40,0:02:22.79,*Default,NTP,0000,0000,0000,,这是有道理的，对吧？
Dialogue: 0,0:02:22.79,0:02:24.95,*Default,NTP,0000,0000,0000,,所以这些是根本的区别
Dialogue: 0,0:02:24.95,0:02:28.50,*Default,NTP,0000,0000,0000,,在块级框和行内框之间。
Dialogue: 0,0:02:28.50,0:02:29.87,*Default,NTP,0000,0000,0000,,但还有一些，
Dialogue: 0,0:02:29.87,0:02:32.33,*Default,NTP,0000,0000,0000,,所以让我们看一个比较。
Dialogue: 0,0:02:33.86,0:02:37.22,*Default,NTP,0000,0000,0000,,所以在这里我突出显示了所有的块级元素
Dialogue: 0,0:02:37.22,0:02:41.06,*Default,NTP,0000,0000,0000,,或现在我们页面上的块级框。
Dialogue: 0,0:02:41.06,0:02:42.98,*Default,NTP,0000,0000,0000,,正如我已经提到的，
Dialogue: 0,0:02:42.98,0:02:47.00,*Default,NTP,0000,0000,0000,,这些元素基本上被格式化为块。
Dialogue: 0,0:02:47.00,0:02:49.56,*Default,NTP,0000,0000,0000,,这么大的内容块，
Dialogue: 0,0:02:49.56,0:02:54.08,*Default,NTP,0000,0000,0000,,它占据了父元素宽度的 100%。
Dialogue: 0,0:02:54.08,0:02:57.17,*Default,NTP,0000,0000,0000,,即使内容本身也是如此
Dialogue: 0,0:02:57.17,0:02:59.77,*Default,NTP,0000,0000,0000,,实际上不需要那么多空间。
Dialogue: 0,0:02:59.77,0:03:02.98,*Default,NTP,0000,0000,0000,,例如，这个“什么是 HTML”标题，
Dialogue: 0,0:03:02.98,0:03:06.55,*Default,NTP,0000,0000,0000,,实际上它不需要整条线，对吧？
Dialogue: 0,0:03:06.55,0:03:09.21,*Default,NTP,0000,0000,0000,,但它仍然是块级元素
Dialogue: 0,0:03:09.21,0:03:11.82,*Default,NTP,0000,0000,0000,,因为那样它们可以垂直堆叠
Dialogue: 0,0:03:11.82,0:03:14.87,*Default,NTP,0000,0000,0000,,默认一个接一个。
Dialogue: 0,0:03:14.87,0:03:17.49,*Default,NTP,0000,0000,0000,,现在，有一件非常重要的事情要提
Dialogue: 0,0:03:17.49,0:03:20.02,*Default,NTP,0000,0000,0000,,是盒子模型完全适用
Dialogue: 0,0:03:20.02,0:03:23.37,*Default,NTP,0000,0000,0000,,正如我之前向您展示的块级元素
Dialogue: 0,0:03:23.37,0:03:27.26,*Default,NTP,0000,0000,0000,,而对于内联元素，情况并非如此，
Dialogue: 0,0:03:27.26,0:03:30.59,*Default,NTP,0000,0000,0000,,我们马上就会看到。好的？
Dialogue: 0,0:03:30.59,0:03:34.10,*Default,NTP,0000,0000,0000,,现在默认情况下，大多数 HTML 元素
Dialogue: 0,0:03:34.10,0:03:36.50,*Default,NTP,0000,0000,0000,,实际上是 b锁级元素，
Dialogue: 0,0:03:36.50,0:03:39.30,*Default,NTP,0000,0000,0000,,所以像body、main、header这样的东西，
Dialogue: 0,0:03:39.30,0:03:41.10,*Default,NTP,0000,0000,0000,,等等等等。
Dialogue: 0,0:03:41.10,0:03:44.31,*Default,NTP,0000,0000,0000,,所以我们真正使用的大部分元素
Dialogue: 0,0:03:44.31,0:03:46.22,*Default,NTP,0000,0000,0000,,是块级元素，
Dialogue: 0,0:03:46.22,0:03:50.63,*Default,NTP,0000,0000,0000,,所以我们也可以说他们创建了块级盒子。
Dialogue: 0,0:03:50.63,0:03:51.91,*Default,NTP,0000,0000,0000,,好的。
Dialogue: 0,0:03:51.91,0:03:55.24,*Default,NTP,0000,0000,0000,,现在，我们可以用 CSS 做的一件事
Dialogue: 0,0:03:55.24,0:03:59.98,*Default,NTP,0000,0000,0000,,就是从行内框变成块级框。
Dialogue: 0,0:03:59.98,0:04:03.45,*Default,NTP,0000,0000,0000,,我们可以通过显示属性集来做到这一点
Dialogue: 0,0:04:03.45,0:04:06.07,*Default,NTP,0000,0000,0000,,块的值，
Dialogue: 0,0:04:06.07,0:04:09.01,*Default,NTP,0000,0000,0000,,但我们将在一秒钟内在实践中做到这一点。
Dialogue: 0,0:04:09.01,0:04:10.80,*Default,NTP,0000,0000,0000,,但是现在，我想做的
Dialogue: 0,0:04:10.80,0:04:14.02,*Default,NTP,0000,0000,0000,,就是看内联元素
Dialogue: 0,0:04:14.02,0:04:17.06,*Default,NTP,0000,0000,0000,,以及它与块级元素的不同之处。
Dialogue: 0,0:04:18.78,0:04:23.78,*Default,NTP,0000,0000,0000,,所以在这里我用这个红色边框标记了内联元素，
Dialogue: 0,0:04:24.45,0:04:26.93,*Default,NTP,0000,0000,0000,,你会看到如预期的那样，
Dialogue: 0,0:04:26.93,0:04:29.55,*Default,NTP,0000,0000,0000,,他们只占据了空间
Dialogue: 0,0:04:29.55,0:04:32.61,*Default,NTP,0000,0000,0000,,这是其内容所必需的。
Dialogue: 0,0:04:32.61,0:04:35.52,*Default,NTP,0000,0000,0000,,他们也不会在之后创建任何换行符
Dialogue: 0,0:04:35.52,0:04:37.32,*Default,NTP,0000,0000,0000,,或在元素之前。
Dialogue: 0,0:04:37.32,0:04:40.65,*Default,NTP,0000,0000,0000,,因此，他们可以简单地呆在里面
Dialogue: 0,0:04:40.65,0:04:44.09,*Default,NTP,0000,0000,0000,,他们的父元素没有创建
Dialogue: 0,0:04:44.09,0:04:45.89,*Default,NTP,0000,0000,0000,,任何额外的空间。
Dialogue: 0,0:04:45.89,0:04:49.84,*Default,NTP,0000,0000,0000,,这正是对较小元素有意义的原因，
Dialogue: 0,0:04:49.84,0:04:53.64,*Default,NTP,0000,0000,0000,,比如强元素，em元素，
Dialogue: 0,0:04:53.64,0:04:56.13,*Default,NTP,0000,0000,0000,,或锚元素，对吧？
Dialogue: 0,0:04:56.13,0:04:59.85,*Default,NTP,0000,0000,0000,,我们不希望这些元素创建一个新行
Dialogue: 0,0:04:59.85,0:05:03.04,*Default,NTP,0000,0000,0000,,并尽可能占据所有宽度。
Dialogue: 0,0:05:03.04,0:05:05.12,*Default,NTP,0000,0000,0000,,就是没有任何意义，
Dialogue: 0,0:05:05.12,0:05:07.29,*Default,NTP,0000,0000,0000,,这就是为什么我们有
Dialogue: 0,0:05:07.29,0:05:09.89,*Default,NTP,0000,0000,0000,,这些不同类型的盒子。
Dialogue: 0,0:05:09.89,0:05:13.94,*Default,NTP,0000,0000,0000,,但无论如何，现在关于盒子模型，正如我所说，
Dialogue: 0,0:05:13.94,0:05:17.11,*Default,NTP,0000,0000,0000,,它在内联元素中的工作方式不同。
Dialogue: 0,0:05:17.11,0:05:19.12,*Default,NTP,0000,0000,0000,,所以对于内联元素，
Dialogue: 0,0:05:19.12,0:05:23.69,*Default,NTP,0000,0000,0000,,高度和宽度属性没有任何影响。
Dialogue: 0,0:05:23.69,0:05:28.14,*Default,NTP,0000,0000,0000,,填充和边距也仅水平应用
Dialogue: 0,0:05:28.14,0:05:31.43,*Default,NTP,0000,0000,0000,,或者换句话说，在左侧和右侧，
Dialogue: 0,0:05:31.43,0:05:34.36,*Default,NTP,0000,0000,0000,,但不在顶部和底部。
Dialogue: 0,0:05:34.36,0:05:35.96,*Default,NTP,0000,0000,0000,,而这个根本区别
Dialogue: 0,0:05:35.96,0:05:39.26,*Default,NTP,0000,0000,0000,,关于盒子模型如何适用于内陆元素
Dialogue: 0,0:05:39.26,0:05:42.69,*Default,NTP,0000,0000,0000,,始终牢记这一点非常重要
Dialogue: 0,0:05:42.69,0:05:44.35,*Default,NTP,0000,0000,0000,,并且永远不会忘记，
Dialogue: 0,0:05:44.35,0:05:47.04,*Default,NTP,0000,0000,0000,,因为这是我看到初学者的错误
Dialogue: 0,0:05:47.04,0:05:49.07,*Default,NTP,0000,0000,0000,,让所有的时间，
Dialogue: 0,0:05:49.07,0:05:51.84,*Default,NTP,0000,0000,0000,,这基本上是不明白
Dialogue: 0,0:05:51.84,0:05:55.55,*Default,NTP,0000,0000,0000,,为什么盒子模型的某些属性不起作用
Dialogue: 0,0:05:55.55,0:05:59.28,*Default,NTP,0000,0000,0000,,正如预期的那样应用于内联元素。
Dialogue: 0,0:05:59.28,0:06:02.60,*Default,NTP,0000,0000,0000,,所以请注意这一点，因为它非常重要
Dialogue: 0,0:06:02.60,0:06:03.96,*Default,NTP,0000,0000,0000,,要始终牢记。
Dialogue: 0,0:06:04.91,0:06:06.36,*Default,NTP,0000,0000,0000,,现在默认情况下，
Dialogue: 0,0:06:06.36,0:06:09.52,*Default,NTP,0000,0000,0000,,一些是内联元素的元素，
Dialogue: 0,0:06:09.52,0:06:13.53,*Default,NTP,0000,0000,0000,,所以创建内联框的是锚点，图像，
Dialogue: 0,0:06:13.53,0:06:18.50,*Default,NTP,0000,0000,0000,,strong、em、按钮以及更多。
Dialogue: 0,0:06:18.50,0:06:21.66,*Default,NTP,0000,0000,0000,,现在，就像我们可以用来显示属性一样
Dialogue: 0,0:06:21.66,0:06:24.78,*Default,NTP,0000,0000,0000,,使任何元素成为块级元素，
Dialogue: 0,0:06:24.78,0:06:28.09,*Default,NTP,0000,0000,0000,,我们也可以使用显示设置为内联
Dialogue: 0,0:06:28.09,0:06:31.00,*Default,NTP,0000,0000,0000,,为了转换任何块级元素
Dialogue: 0,0:06:31.00,0:06:33.18,*Default,NTP,0000,0000,0000,,到内联元素。
Dialogue: 0,0:06:33.18,0:06:36.22,*Default,NTP,0000,0000,0000,,实际上现在让我们回到我们的代码
Dialogue: 0,0:06:36.22,0:06:38.75,*Default,NTP,0000,0000,0000,,看看其中一些事情的实际效果。
Dialogue: 0,0:06:40.35,0:06:44.46,*Default,NTP,0000,0000,0000,,让我们首先尝试在此处格式化这些链接
Dialogue: 0,0:06:44.46,0:06:45.90,*Default,NTP,0000,0000,0000,,在标题中。
Dialogue: 0,0:06:47.76,0:06:52.76,*Default,NTP,0000,0000,0000,,所以让我们选择它们，但我会做得更多。
Dialogue: 0,0:06:52.80,0:06:55.22,*Default,NTP,0000,0000,0000,,让我在这里创建一些评论。
Dialogue: 0,0:06:57.22,0:07:01.85,*Default,NTP,0000,0000,0000,,所以让我们说这些就像页面部分
Dialogue: 0,0:07:01.85,0:07:03.30,*Default,NTP,0000,0000,0000,,或类似的东西。
Dialogue: 0,0:07:04.30,0:07:08.52,*Default,NTP,0000,0000,0000,,所以基本上我们页面的所有大的分割部分。
Dialogue: 0,0:07:08.52,0:07:10.16,*Default,NTP,0000,0000,0000,,所以我们当然有身体，
Dialogue: 0,0:07:10.16,0:07:12.54,*Default,NTP,0000,0000,0000,,容器，主标题，
Dialogue: 0,0:07:12.54,0:07:16.22,*Default,NTP,0000,0000,0000,,导航、文章和所有这些。
Dialogue: 0,0:07:16.22,0:07:18.20,*Default,NTP,0000,0000,0000,,然后这里是我们开始的地方，
Dialogue: 0,0:07:18.20,0:07:21.07,*Default,NTP,0000,0000,0000,,或喜欢较小的元素。
Dialogue: 0,0:07:22.00,0:07:23.97,*Default,NTP,0000,0000,0000,,这里的这些标题并不重要。
Dialogue: 0,0:07:23.97,0:07:26.54,*Default,NTP,0000,0000,0000,,我只想拥有像视觉上的分离
Dialogue: 0,0:07:26.54,0:07:27.76,*Default,NTP,0000,0000,0000,,代码里面。
Dialogue: 0,0:07:29.75,0:07:33.66,*Default,NTP,0000,0000,0000,,好的，让我们一路向下。
Dialogue: 0,0:07:34.80,0:07:36.87,*Default,NTP,0000,0000,0000,,也许让我们看看这里。
Dialogue: 0,0:07:36.87,0:07:39.20,*Default,NTP,0000,0000,0000,,所以我想选择所有的链接
Dialogue: 0,0:07:39.20,0:07:42.71,*Default,NTP,0000,0000,0000,,在导航里面。
Dialogue: 0,0:07:42.71,0:07:47.71,*Default,NTP,0000,0000,0000,,所以让我们说导航，然后是那里的链接。
Dialogue: 0,0:07:48.06,0:07:48.89,*Default,NTP,0000,0000,0000,,和往常一样，
Dialogue: 0,0:07:48.89,0:07:53.00,*Default,NTP,0000,0000,0000,,我应该使用链接伪类来实际设置它们的样式。
Dialogue: 0,0:07:54.21,0:07:57.34,*Default,NTP,0000,0000,0000,,现在为了更好地了解这一点，会发生什么，
Dialogue: 0,0:07:58.94,0:08:02.70,*Default,NTP,0000,0000,0000,,让我们给他们一种颜色，一种背景颜色，
Dialogue: 0,0:08:02.70,0:08:07.69,*Default,NTP,0000,0000,0000,,像橙红色，现在我需要在这里手动重新加载。
Dialogue: 0,0:08:09.61,0:08:13.20,*Default,NTP,0000,0000,0000,,好的，所以我们得到了背景颜色
Dialogue: 0,0:08:13.20,0:08:16.87,*Default,NTP,0000,0000,0000,,现在让我们开始在这里添加一些边距，
Dialogue: 0,0:08:16.87,0:08:21.15,*Default,NTP,0000,0000,0000,,就这样我们看到盒子模型实际上是这样的，
Dialogue: 0,0:08:21.15,0:08:23.68,*Default,NTP,0000,0000,0000,,没有像我们想象的那样应用。
Dialogue: 0,0:08:24.53,0:08:28.02,*Default,NTP,0000,0000,0000,,所以让我们说20像素并给它一个保存。
Dialogue: 0,0:08:28.86,0:08:33.20,*Default,NTP,0000,0000,0000,,您会看到一些边距被水平编辑。
Dialogue: 0,0:08:33.20,0:08:36.79,*Default,NTP,0000,0000,0000,,所以在左边和右边，右边。
Dialogue: 0,0:08:36.79,0:08:41.79,*Default,NTP,0000,0000,0000,,但没有发生的是垂直空间被创造出来。
Dialogue: 0,0:08:42.26,0:08:45.63,*Default,NTP,0000,0000,0000,,所以顶部和底部边距保持不变。
Dialogue: 0,0:08:47.05,0:08:50.98,*Default,NTP,0000,0000,0000,,现在，如果我们在盒子模型中检查一下，
Dialogue: 0,0:08:50.98,0:08:54.76,*Default,NTP,0000,0000,0000,,在开发工具中，它仍然会出现在这里，
Dialogue: 0,0:08:56.90,0:08:58.90,*Default,NTP,0000,0000,0000,,这里还有一些空间。
Dialogue: 0,0:08:58.90,0:09:01.84,*Default,NTP,0000,0000,0000,,所以你会看到 20 的值仍然出现，
Dialogue: 0,0:09:01.84,0:09:04.57,*Default,NTP,0000,0000,0000,,但是在彩色覆盖层上，
Dialogue: 0,0:09:05.76,0:09:09.75,*Default,NTP,0000,0000,0000,,所以这里这个橘子，其实并没有创造任何空间，
Dialogue: 0,0:09:09.75,0:09:12.84,*Default,NTP,0000,0000,0000,,尽管这里说的是 20，对吧？
Dialogue: 0,0:09:12.84,0:09:14.72,*Default,NTP,0000,0000,0000,,所以，正如你现在所知道的，
Dialogue: 0,0:09:14.72,0:09:17.65,*Default,NTP,0000,0000,0000,,原因是锚元素
Dialogue: 0,0:09:17.65,0:09:20.47,*Default,NTP,0000,0000,0000,,是一个内联元素，其中盒子模型
Dialogue: 0,0:09:20.47,0:09:23.34,*Default,NTP,0000,0000,0000,,不创造任何垂直空间，
Dialogue: 0,0:09:23.34,0:09:25.88,*Default,NTP,0000,0000,0000,,填充也是如此。
Dialogue: 0,0:09:28.82,0:09:30.75,*Default,NTP,0000,0000,0000,,所以填充20像素。
Dialogue: 0,0:09:33.14,0:09:34.70,*Default,NTP,0000,0000,0000,,那么让我们看看。
Dialogue: 0,0:09:34.70,0:09:39.48,*Default,NTP,0000,0000,0000,,现在它确实看起来好像创造了一些空间，
Dialogue: 0,0:09:39.48,0:09:43.57,*Default,NTP,0000,0000,0000,,但这仅适用于元素内部
Dialogue: 0,0:09:43.57,0:09:47.41,*Default,NTP,0000,0000,0000,,因为其实主播内容，
Dialogue: 0,0:09:47.41,0:09:50.10,*Default,NTP,0000,0000,0000,,所以锚内容本身还是
Dialogue: 0,0:09:50.10,0:09:52.03,*Default,NTP,0000,0000,0000,,在完全相同的地方，
Dialogue: 0,0:09:52.03,0:09:54.57,*Default,NTP,0000,0000,0000,,但如果这是一个块级元素，
Dialogue: 0,0:09:54.57,0:09:58.00,*Default,NTP,0000,0000,0000,,那么所有这些都会下降一点。
Dialogue: 0,0:09:58.00,0:10:00.57,*Default,NTP,0000,0000,0000,,所以基本上这个元素的填充区域
Dialogue: 0,0:10:00.57,0:10:04.46,*Default,NTP,0000,0000,0000,,已扩展并填充了背景颜色，
Dialogue: 0,0:10:04.46,0:10:07.55,*Default,NTP,0000,0000,0000,,但实际上并没有创造新的空间。
Dialogue: 0,0:10:08.70,0:10:10.25,*Default,NTP,0000,0000,0000,,好的？
Dialogue: 0,0:10:10.25,0:10:13.13,*Default,NTP,0000,0000,0000,,但如果我们真的想拥有那个空间，
Dialogue: 0,0:10:13.13,0:10:17.39,*Default,NTP,0000,0000,0000,,如果我们希望元素一个接一个，
Dialogue: 0,0:10:17.39,0:10:21.39,*Default,NTP,0000,0000,0000,,那么我们当然可以将它们更改为块级元素。
Dialogue: 0,0:10:22.47,0:10:25.86,*Default,NTP,0000,0000,0000,,这正是我在幻灯片中向您展示的内容
Dialogue: 0,0:10:25.86,0:10:28.88,*Default,NTP,0000,0000,0000,,通过使用显示属性
Dialogue: 0,0:10:28.88,0:10:31.96,*Default,NTP,0000,0000,0000,,并将其设置为块的值。
Dialogue: 0,0:10:31.96,0:10:34.52,*Default,NTP,0000,0000,0000,,所以这将渲染内联元素
Dialogue: 0,0:10:34.52,0:10:36.03,*Default,NTP,0000,0000,0000,,作为块级元素。
Dialogue: 0,0:10:36.96,0:10:38.66,*Default,NTP,0000,0000,0000,,那么你认为会发生什么
Dialogue: 0,0:10:38.66,0:10:40.18,*Default,NTP,0000,0000,0000,,一旦我现在保存这个？
Dialogue: 0,0:10:41.30,0:10:43.22,*Default,NTP,0000,0000,0000,,我们走了，
Dialogue: 0,0:10:43.22,0:10:48.05,*Default,NTP,0000,0000,0000,,现在所有这些元素都占据了它们可以占据的所有宽度
Dialogue: 0,0:10:48.05,0:10:50.05,*Default,NTP,0000,0000,0000,,他们现在实际上也有
Dialogue: 0,0:10:50.05,0:10:53.06,*Default,NTP,0000,0000,0000,,它们之间的垂直边距也是如此。
Dialogue: 0,0:10:53.06,0:10:58.06,*Default,NTP,0000,0000,0000,,现在它们有点在这个标题元素之外现在
Dialogue: 0,0:10:58.22,0:11:02.63,*Default,NTP,0000,0000,0000,,因为我们将标题元素设置为固定高度，
Dialogue: 0,0:11:02.63,0:11:05.08,*Default,NTP,0000,0000,0000,,所以在之前的一堂课中。
Dialogue: 0,0:11:05.08,0:11:08.07,*Default,NTP,0000,0000,0000,,因此，让我通过叠加层向您展示这一点。
Dialogue: 0,0:11:10.47,0:11:12.54,*Default,NTP,0000,0000,0000,,我们这里需要更多的空间。
Dialogue: 0,0:11:12.54,0:11:15.89,*Default,NTP,0000,0000,0000,,因此，由于我们将高度设置为标题
Dialogue: 0,0:11:15.89,0:11:19.24,*Default,NTP,0000,0000,0000,,到 80 像素的特定值，
Dialogue: 0,0:11:19.24,0:11:21.73,*Default,NTP,0000,0000,0000,,然后内容不再适合那里，
Dialogue: 0,0:11:21.73,0:11:24.34,*Default,NTP,0000,0000,0000,,所以元素没有展开
Dialogue: 0,0:11:24.34,0:11:26.54,*Default,NTP,0000,0000,0000,,为了适应内容。
Dialogue: 0,0:11:26.54,0:11:28.15,*Default,NTP,0000,0000,0000,,所以这就是为什么通常
Dialogue: 0,0:11:28.15,0:11:32.23,*Default,NTP,0000,0000,0000,,我们没有在元素上设置固定高度。
Dialogue: 0,0:11:32.23,0:11:33.97,*Default,NTP,0000,0000,0000,,所以让我回去改变它，
Dialogue: 0,0:11:35.71,0:11:37.96,*Default,NTP,0000,0000,0000,,所以这只是一个演示。
Dialogue: 0,0:11:39.10,0:11:43.04,*Default,NTP,0000,0000,0000,,所以是的，这是我们设置为 80 的高度。
Dialogue: 0,0:11:43.04,0:11:46.43,*Default,NTP,0000,0000,0000,,所以让我评论一下，再次保存。
Dialogue: 0,0:11:46.43,0:11:48.80,*Default,NTP,0000,0000,0000,,现在元素在这里垂直扩展
Dialogue: 0,0:11:48.80,0:11:53.13,*Default,NTP,0000,0000,0000,,考虑到所需的额外空间。
Dialogue: 0,0:11:53.13,0:11:56.13,*Default,NTP,0000,0000,0000,,好的。所以希望这是有道理的。
Dialogue: 0,0:11:56.13,0:12:00.76,*Default,NTP,0000,0000,0000,,但这里的重点是这里的这些锚元素
Dialogue: 0,0:12:00.76,0:12:02.88,*Default,NTP,0000,0000,0000,,现在满足所有条件
Dialogue: 0,0:12:02.88,0:12:05.40,*Default,NTP,0000,0000,0000,,作为块级元素。
Dialogue: 0,0:12:05.40,0:12:08.37,*Default,NTP,0000,0000,0000,,所以盒子模型通常适用于它们，
Dialogue: 0,0:12:08.37,0:12:12.37,*Default,NTP,0000,0000,0000,,它们占据了可用宽度的 100%，
Dialogue: 0,0:12:12.37,0:12:15.74,*Default,NTP,0000,0000,0000,,因此它们一个接一个地出现
Dialogue: 0,0:12:15.74,0:12:17.90,*Default,NTP,0000,0000,0000,,很好地格式化为块。
Dialogue: 0,0:12:19.62,0:12:21.01,*Default,NTP,0000,0000,0000,,好的。
Dialogue: 0,0:12:21.01,0:12:24.05,*Default,NTP,0000,0000,0000,,所以它们占据了我们在这里看到的所有空间，
Dialogue: 0,0:12:24.05,0:12:26.79,*Default,NTP,0000,0000,0000,,这当然包括边距。
Dialogue: 0,0:12:26.79,0:12:31.79,*Default,NTP,0000,0000,0000,,因此，如果我们看一下，这些中的每一个都有一些余量，对吗？
Dialogue: 0,0:12:31.90,0:12:36.16,*Default,NTP,0000,0000,0000,,这就是这里的橙色。
Dialogue: 0,0:12:36.16,0:12:38.77,*Default,NTP,0000,0000,0000,,所以这是整个空间的一部分
Dialogue: 0,0:12:38.77,0:12:43.44,*Default,NTP,0000,0000,0000,,元素本身需要，好吗？
Dialogue: 0,0:12:43.44,0:12:45.28,*Default,NTP,0000,0000,0000,,好吧，让我们回到这里
Dialogue: 0,0:12:45.28,0:12:47.39,*Default,NTP,0000,0000,0000,,实际上把这一切都关掉
Dialogue: 0,0:12:48.31,0:12:52.04,*Default,NTP,0000,0000,0000,,因为这实际上只是一个演示。
Dialogue: 0,0:12:52.04,0:12:54.01,*Default,NTP,0000,0000,0000,,好的？而现在，当然，
Dialogue: 0,0:12:54.01,0:12:56.80,*Default,NTP,0000,0000,0000,,我们将看到标题缩回
Dialogue: 0,0:12:56.80,0:13:00.39,*Default,NTP,0000,0000,0000,,只在此处垂直占据它需要的空间。
Dialogue: 0,0:13:01.24,0:13:03.69,*Default,NTP,0000,0000,0000,,好吧，随着我们不断添加越来越多的元素，
Dialogue: 0,0:13:03.69,0:13:05.35,*Default,NTP,0000,0000,0000,,那么这应该增长，
Dialogue: 0,0:13:05.35,0:13:07.39,*Default,NTP,0000,0000,0000,,这正是之前发生的事情
Dialogue: 0,0:13:07.39,0:13:09.27,*Default,NTP,0000,0000,0000,,当这些链接更大时，
Dialogue: 0,0:13:09.27,0:13:11.35,*Default,NTP,0000,0000,0000,,但现在他们又变小了
Dialogue: 0,0:13:11.35,0:13:15.55,*Default,NTP,0000,0000,0000,,因此，不需要我们拥有的所有空间。
Dialogue: 0,0:13:15.55,0:13:20.04,*Default,NTP,0000,0000,0000,,现在接下来，让我们快速尝试相反的方法
Dialogue: 0,0:13:20.04,0:13:24.96,*Default,NTP,0000,0000,0000,,并将一些块级元素更改为内联元素。
Dialogue: 0,0:13:25.92,0:13:27.40,*Default,NTP,0000,0000,0000,,例如，
Dialogue: 0,0:13:27.40,0:13:28.66,*Default,NTP,0000,0000,0000,,让我们试试会发生什么
Dialogue: 0,0:13:28.66,0:13:33.26,*Default,NTP,0000,0000,0000,,当我们将列表元素设为内联时。
Dialogue: 0,0:13:33.26,0:13:35.77,*Default,NTP,0000,0000,0000,,显示，内联。
Dialogue: 0,0:13:39.26,0:13:40.88,*Default,NTP,0000,0000,0000,,让我们实际删除它。
Dialogue: 0,0:13:41.76,0:13:45.87,*Default,NTP,0000,0000,0000,,现在你会看到这三个元素
Dialogue: 0,0:13:45.87,0:13:48.45,*Default,NTP,0000,0000,0000,,现在基本上是并排的
Dialogue: 0,0:13:48.45,0:13:50.85,*Default,NTP,0000,0000,0000,,并且只占用他们需要的空间。
Dialogue: 0,0:13:51.92,0:13:53.83,*Default,NTP,0000,0000,0000,,实际上让我们把它带回来
Dialogue: 0,0:13:53.83,0:13:55.82,*Default,NTP,0000,0000,0000,,因为正如我提到的，
Dialogue: 0,0:13:55.82,0:13:58.07,*Default,NTP,0000,0000,0000,,开发工具真的很重要
Dialogue: 0,0:13:58.07,0:14:03.07,*Default,NTP,0000,0000,0000,,特别是像这些盒子一样叠加，对吧？
Dialogue: 0,0:14:04.91,0:14:07.96,*Default,NTP,0000,0000,0000,,所以现在盒子像这样并排
Dialogue: 0,0:14:07.96,0:14:10.42,*Default,NTP,0000,0000,0000,,因为它们是内联框。
Dialogue: 0,0:14:10.42,0:14:13.47,*Default,NTP,0000,0000,0000,,所以他们不再在他们之后创建换行符
Dialogue: 0,0:14:13.47,0:14:17.01,*Default,NTP,0000,0000,0000,,并且只占用了他们需要的空间。
Dialogue: 0,0:14:17.01,0:14:18.16,*Default,NTP,0000,0000,0000,,让我们尝试同样的方法。
Dialogue: 0,0:14:19.22,0:14:22.53,*Default,NTP,0000,0000,0000,,我会在这里关闭它并在段落上尝试相同的操作。
Dialogue: 0,0:14:28.42,0:14:32.19,*Default,NTP,0000,0000,0000,,所以这看起来更奇怪
Dialogue: 0,0:14:32.19,0:14:34.55,*Default,NTP,0000,0000,0000,,因为所有的文字基本上都塌了
Dialogue: 0,0:14:34.55,0:14:39.55,*Default,NTP,0000,0000,0000,,只是变成一大行文字，看起来，对吧？
Dialogue: 0,0:14:45.52,0:14:47.36,*Default,NTP,0000,0000,0000,,小号o 再次，现在这些元素中的每一个
Dialogue: 0,0:14:47.36,0:14:50.56,*Default,NTP,0000,0000,0000,,基本上只占用它需要的空间。
Dialogue: 0,0:14:52.60,0:14:54.93,*Default,NTP,0000,0000,0000,,好吧，但让我们删除它
Dialogue: 0,0:14:54.93,0:14:58.09,*Default,NTP,0000,0000,0000,,因为在这种情况下没有多大意义，
Dialogue: 0,0:14:58.09,0:15:02.39,*Default,NTP,0000,0000,0000,,但在某些情况下，它实际上很有意义。
Dialogue: 0,0:15:02.39,0:15:03.96,*Default,NTP,0000,0000,0000,,现在，在很多情况下，
Dialogue: 0,0:15:03.96,0:15:07.01,*Default,NTP,0000,0000,0000,,更有意义的是转变
Dialogue: 0,0:15:07.01,0:15:09.84,*Default,NTP,0000,0000,0000,,将块级元素转换为称为
Dialogue: 0,0:15:09.84,0:15:12.49,*Default,NTP,0000,0000,0000,,一个内联块元素。
Dialogue: 0,0:15:12.49,0:15:16.90,*Default,NTP,0000,0000,0000,,所以基本上这是内联和块级的混合。
Dialogue: 0,0:15:16.90,0:15:19.73,*Default,NTP,0000,0000,0000,,因此，让我们快速检查一下这意味着什么。
Dialogue: 0,0:15:21.52,0:15:24.94,*Default,NTP,0000,0000,0000,,所以在这里，我们有一个块级的快速总结
Dialogue: 0,0:15:24.94,0:15:26.64,*Default,NTP,0000,0000,0000,,和内联框。
Dialogue: 0,0:15:26.64,0:15:28.06,*Default,NTP,0000,0000,0000,,所以我们已经知道，
Dialogue: 0,0:15:28.06,0:15:31.20,*Default,NTP,0000,0000,0000,,所以我们不需要再重复一遍。
Dialogue: 0,0:15:31.20,0:15:34.40,*Default,NTP,0000,0000,0000,,但是基本上还有第三种类型的盒子，
Dialogue: 0,0:15:34.40,0:15:36.86,*Default,NTP,0000,0000,0000,,这是这两者之间的混合。
Dialogue: 0,0:15:36.86,0:15:41.86,*Default,NTP,0000,0000,0000,,正如我之前所说，这就是内联块框。
Dialogue: 0,0:15:42.00,0:15:44.30,*Default,NTP,0000,0000,0000,,所以内联块框，
Dialogue: 0,0:15:44.30,0:15:47.93,*Default,NTP,0000,0000,0000,,它们从外面看起来像内联，
Dialogue: 0,0:15:47.93,0:15:52.93,*Default,NTP,0000,0000,0000,,但它们在内部表现得像块级元素。
Dialogue: 0,0:15:52.93,0:15:56.68,*Default,NTP,0000,0000,0000,,所以这意味着内联块框
Dialogue: 0,0:15:56.68,0:16:00.97,*Default,NTP,0000,0000,0000,,只占用内容所需的空间，
Dialogue: 0,0:16:00.97,0:16:05.13,*Default,NTP,0000,0000,0000,,因此它们不会导致任何换行符。
Dialogue: 0,0:16:05.13,0:16:09.12,*Default,NTP,0000,0000,0000,,所以这就是我所说的内联块框的意思
Dialogue: 0,0:16:09.12,0:16:13.38,*Default,NTP,0000,0000,0000,,从外部看，它的行为就像一个内联框。
Dialogue: 0,0:16:13.38,0:16:14.97,*Default,NTP,0000,0000,0000,,然而，正如我所说，
Dialogue: 0,0:16:14.97,0:16:18.92,*Default,NTP,0000,0000,0000,,它在内部表现得像一个块级盒子，
Dialogue: 0,0:16:18.92,0:16:22.58,*Default,NTP,0000,0000,0000,,所以这意味着盒子模型适用
Dialogue: 0,0:16:22.58,0:16:26.24,*Default,NTP,0000,0000,0000,,就像它对块级框所做的那样。
Dialogue: 0,0:16:26.24,0:16:29.13,*Default,NTP,0000,0000,0000,,所以我们仍然可以设置高度和宽度，\N00:16:29,130​​ --> 00:16:32,290\N我们仍然可以使用边距和填充\N\N301
Dialogue: 0,0:16:32.29,0:16:36.70,*Default,NTP,0000,0000,0000,,就像在块级盒子或块级元素上一样。
Dialogue: 0,0:16:36.70,0:16:38.41,*Default,NTP,0000,0000,0000,,所以这些是一样的，
Dialogue: 0,0:16:38.41,0:16:42.08,*Default,NTP,0000,0000,0000,,所以我一直交替使用它们。
Dialogue: 0,0:16:42.08,0:16:46.23,*Default,NTP,0000,0000,0000,,所以本质上，内联块框真的结合了
Dialogue: 0,0:16:46.23,0:16:50.25,*Default,NTP,0000,0000,0000,,块级和内联两全其美。
Dialogue: 0,0:16:50.25,0:16:53.36,*Default,NTP,0000,0000,0000,,为了创建一个 inline-block 元素，
Dialogue: 0,0:16:53.36,0:16:56.97,*Default,NTP,0000,0000,0000,,我们所要做的就是设置显示属性
Dialogue: 0,0:16:56.97,0:17:00.03,*Default,NTP,0000,0000,0000,,到内联块，就是这样。
Dialogue: 0,0:17:00.03,0:17:03.04,*Default,NTP,0000,0000,0000,,现在让我们看看我们如何在实践中做到这一点
Dialogue: 0,0:17:03.04,0:17:06.80,*Default,NTP,0000,0000,0000,,在某些情况下，这可能非常有用。
Dialogue: 0,0:17:08.27,0:17:11.79,*Default,NTP,0000,0000,0000,,所以让我们回到我们的标题链接。
Dialogue: 0,0:17:11.79,0:17:13.55,*Default,NTP,0000,0000,0000,,所以对于这个导航，
Dialogue: 0,0:17:13.55,0:17:16.77,*Default,NTP,0000,0000,0000,,这样我就可以告诉你一个 inline-block 元素在哪里
Dialogue: 0,0:17:16.77,0:17:18.70,*Default,NTP,0000,0000,0000,,会很有帮助。
Dialogue: 0,0:17:18.70,0:17:22.67,*Default,NTP,0000,0000,0000,,所以现在这里还有很多格式，
Dialogue: 0,0:17:22.67,0:17:25.97,*Default,NTP,0000,0000,0000,,就像没有间距一样，所以我们需要解决这个问题。
Dialogue: 0,0:17:27.63,0:17:32.27,*Default,NTP,0000,0000,0000,,所以这是在下面的某个地方，就在这里。
Dialogue: 0,0:17:32.27,0:17:36.07,*Default,NTP,0000,0000,0000,,所以让我们回到尝试添加一些边距
Dialogue: 0,0:17:37.07,0:17:41.31,*Default,NTP,0000,0000,0000,,暂时不更改显示属性中的任何内容。
Dialogue: 0,0:17:42.66,0:17:47.45,*Default,NTP,0000,0000,0000,,假设我们想要 30 像素的边距，
Dialogue: 0,0:17:47.45,0:17:51.09,*Default,NTP,0000,0000,0000,,这应该可行，因为这是一个水平空间，
Dialogue: 0,0:17:51.09,0:17:54.40,*Default,NTP,0000,0000,0000,,所以这甚至适用于内联元素。
Dialogue: 0,0:17:54.40,0:17:56.95,*Default,NTP,0000,0000,0000,,但是现在如果我想添加一个边距顶部
Dialogue: 0,0:17:59.65,0:18:04.65,*Default,NTP,0000,0000,0000,,比方说 10 个像素，那么什么都不会改变，对吧？
Dialogue: 0,0:18:05.36,0:18:08.69,*Default,NTP,0000,0000,0000,,所以它保持不变，这正是行为
Dialogue: 0,0:18:08.69,0:18:11.29,*Default,NTP,0000,0000,0000,,我们一开始就已经看到了。
Dialogue: 0,0:18:11.29,0:18:15.88,*Default,NTP,0000,0000,0000,,但是现在如果我们将显示改为 inline-block，
Dialogue: 0,0:18:16.93,0:18:18.67,*Default,NTP,0000,0000,0000,,然后看看会发生什么。
Dialogue: 0,0:18:20.00,0:18:24.40,*Default,NTP,0000,0000,0000,,所以你看到了，现在我们在这里得到了我们的空间。
Dialogue: 0,0:18:24.40,0:18:25.81,*Default,NTP,0000,0000,0000,,如果我们检查一下，
Dialogue: 0,0:18:26.87,0:18:31.66,*Default,NTP,0000,0000,0000,,那么您确实可以看到右侧的橙色空间
Dialogue: 0,0:18:31.66,0:18:34.78,*Default,NTP,0000,0000,0000,,然后是 th 上的 10 个像素e 顶部。
Dialogue: 0,0:18:34.78,0:18:37.84,*Default,NTP,0000,0000,0000,,所以盒子模型又被应用了
Dialogue: 0,0:18:37.84,0:18:40.07,*Default,NTP,0000,0000,0000,,作为块级元素，
Dialogue: 0,0:18:40.07,0:18:43.40,*Default,NTP,0000,0000,0000,,但在外面，元素仍然是并排的
Dialogue: 0,0:18:43.40,0:18:46.30,*Default,NTP,0000,0000,0000,,只占用他们需要的空间，
Dialogue: 0,0:18:46.30,0:18:48.56,*Default,NTP,0000,0000,0000,,所以表现得像内联元素。
Dialogue: 0,0:18:49.55,0:18:52.64,*Default,NTP,0000,0000,0000,,所以在某些情况下这是一个很棒的技术，
Dialogue: 0,0:18:52.64,0:18:53.98,*Default,NTP,0000,0000,0000,,即使在这一点上，
Dialogue: 0,0:18:53.98,0:18:57.84,*Default,NTP,0000,0000,0000,,我们也有更现代的方式来做类似的事情，
Dialogue: 0,0:18:57.84,0:19:01.87,*Default,NTP,0000,0000,0000,,但在某些情况下，这实际上会很好知道，
Dialogue: 0,0:19:01.87,0:19:05.72,*Default,NTP,0000,0000,0000,,以及工具带中的一项好技术。
Dialogue: 0,0:19:05.72,0:19:07.32,*Default,NTP,0000,0000,0000,,现在只是最后一个细节
Dialogue: 0,0:19:07.32,0:19:09.91,*Default,NTP,0000,0000,0000,,是我们应该删除那个边距吗
Dialogue: 0,0:19:09.91,0:19:12.01,*Default,NTP,0000,0000,0000,,从最后一个元素开始。
Dialogue: 0,0:19:12.01,0:19:13.24,*Default,NTP,0000,0000,0000,,所以让我们选择那个
Dialogue: 0,0:19:14.68,0:19:18.35,*Default,NTP,0000,0000,0000,,导航链接，
Dialogue: 0,0:19:18.35,0:19:20.77,*Default,NTP,0000,0000,0000,,现在你会看到一些新的东西。
Dialogue: 0,0:19:20.77,0:19:24.01,*Default,NTP,0000,0000,0000,,所以这里是一个伪类，对吧。
Dialogue: 0,0:19:24.01,0:19:27.41,*Default,NTP,0000,0000,0000,,但在此之上，我们可以链接另一个伪类
Dialogue: 0,0:19:27.41,0:19:31.09,*Default,NTP,0000,0000,0000,,因为现在我们想要最后一个孩子，对吧。
Dialogue: 0,0:19:32.15,0:19:35.83,*Default,NTP,0000,0000,0000,,像这样，然后我们要设置边距
Dialogue: 0,0:19:37.81,0:19:42.17,*Default,NTP,0000,0000,0000,,直接归零就好了
Dialogue: 0,0:19:42.17,0:19:43.81,*Default,NTP,0000,0000,0000,,所以在视觉上什么都没有改变，
Dialogue: 0,0:19:43.81,0:19:47.63,*Default,NTP,0000,0000,0000,,但是在这里我们现在看到这个不再有死空间
Dialogue: 0,0:19:47.63,0:19:51.46,*Default,NTP,0000,0000,0000,,在右侧，很多时候这很重要。
Dialogue: 0,0:19:51.46,0:19:54.62,*Default,NTP,0000,0000,0000,,所以这就是为什么我想告诉你我们可以连锁
Dialogue: 0,0:19:54.62,0:19:58.34,*Default,NTP,0000,0000,0000,,这些到像这样的伪类没有任何问题。
Dialogue: 0,0:19:58.34,0:20:01.14,*Default,NTP,0000,0000,0000,,太好了，现在要结束了，
Dialogue: 0,0:20:01.14,0:20:03.43,*Default,NTP,0000,0000,0000,,我想向你展示这些图像
Dialogue: 0,0:20:03.43,0:20:06.88,*Default,NTP,0000,0000,0000,,实际上是内联块框。
Dialogue: 0,0:20:06.88,0:20:07.92,*Default,NTP,0000,0000,0000,,好的。
Dialogue: 0,0:20:07.92,0:20:10.04,*Default,NTP,0000,0000,0000,,所以我一开始就说图像
Dialogue: 0,0:20:10.04,0:20:13.34,*Default,NTP,0000,0000,0000,,实际上是内联元素，但实际上，
Dialogue: 0,0:20:13.34,0:20:16.96,*Default,NTP,0000,0000,0000,,它们的行为确实像 inline-block 元素
Dialogue: 0,0:20:16.96,0:20:21.03,*Default,NTP,0000,0000,0000,,我们可以很容易地通过添加一些边距来证明这一点，
Dialogue: 0,0:20:21.03,0:20:25.00,*Default,NTP,0000,0000,0000,,例如，这里的帖子图片。
Dialogue: 0,0:20:25.00,0:20:29.95,*Default,NTP,0000,0000,0000,,因此，如果我在这里添加 100 像素的边距，
Dialogue: 0,0:20:29.95,0:20:32.45,*Default,NTP,0000,0000,0000,,那么如果它是一个内联元素，
Dialogue: 0,0:20:32.45,0:20:35.53,*Default,NTP,0000,0000,0000,,它不应该创建任何垂直空间。
Dialogue: 0,0:20:35.53,0:20:39.31,*Default,NTP,0000,0000,0000,,所以不在这里也不在这里。好的。
Dialogue: 0,0:20:39.31,0:20:41.64,*Default,NTP,0000,0000,0000,,但是请注意我保存它时会发生什么。
Dialogue: 0,0:20:42.90,0:20:44.65,*Default,NTP,0000,0000,0000,,所以你确实看到了
Dialogue: 0,0:20:44.65,0:20:47.60,*Default,NTP,0000,0000,0000,,这里所有的垂直空间都被添加了。
Dialogue: 0,0:20:48.46,0:20:51.13,*Default,NTP,0000,0000,0000,,所以这证明确实
Dialogue: 0,0:20:51.13,0:20:53.85,*Default,NTP,0000,0000,0000,,它是一个内联块元素
Dialogue: 0,0:20:53.85,0:20:55.91,*Default,NTP,0000,0000,0000,,事实也是如此
Dialogue: 0,0:20:55.91,0:20:59.61,*Default,NTP,0000,0000,0000,,我们可以为这个元素设置宽度和高度。
Dialogue: 0,0:20:59.61,0:21:02.44,*Default,NTP,0000,0000,0000,,所以如果它是一个纯粹的内联元素，
Dialogue: 0,0:21:02.44,0:21:06.05,*Default,NTP,0000,0000,0000,,那么这里的这两个也不行，对吧。
Dialogue: 0,0:21:07.20,0:21:09.90,*Default,NTP,0000,0000,0000,,所以这也很重要
Dialogue: 0,0:21:09.90,0:21:12.63,*Default,NTP,0000,0000,0000,,让我们在这里恢复正常。
Dialogue: 0,0:21:13.48,0:21:18.48,*Default,NTP,0000,0000,0000,,好的。这就是 CSS 中框的类型。
Dialogue: 0,0:21:18.86,0:21:20.41,*Default,NTP,0000,0000,0000,,就像一个快速的总结
Dialogue: 0,0:21:20.41,0:21:24.12,*Default,NTP,0000,0000,0000,,或者基本上作为这次讲座的收获，
Dialogue: 0,0:21:24.12,0:21:26.54,*Default,NTP,0000,0000,0000,,大多数时候我们实际上会离开
Dialogue: 0,0:21:26.54,0:21:28.45,*Default,NTP,0000,0000,0000,,单独的显示设置
Dialogue: 0,0:21:28.45,0:21:31.63,*Default,NTP,0000,0000,0000,,并且只需使用预定义的框类型
Dialogue: 0,0:21:31.63,0:21:35.47,*Default,NTP,0000,0000,0000,,因为默认情况下，它们确实很有意义。
Dialogue: 0,0:21:35.47,0:21:38.77,*Default,NTP,0000,0000,0000,,但是，我们可以使用显示设置来阻止
Dialogue: 0,0:21:38.77,0:21:41.41,*Default,NTP,0000,0000,0000,,为了制作一个小的内联元素，
Dialogue: 0,0:21:41.41,0:21:44.47,*Default,NTP,0000,0000,0000,,例如，占据一整行，
Dialogue: 0,0:21:44.47,0:21:47.22,*Default,NTP,0000,0000,0000,,这是我们有时需要的东西
Dialogue: 0,0:21:47.22,0:21:48.87,*Default,NTP,0000,0000,0000,,在现实世界。
Dialogue: 0,0:21:48.87,0:21:50.41,*Default,NTP,0000,0000,0000,,然后反过来，
Dialogue: 0,0:21:50.41,0:21:53.56,*Default,NTP,0000,0000,0000,,有时我们不想要块级元素
Dialogue: 0,0:21:53.56,0:21:57.23,*Default,NTP,0000,0000,0000,,将所有其他元素推入新行。
Dialogue: 0,0:21:57.23,0:22:00.02,*Default,NTP,0000,0000,0000,,所以基本上我们并不总是希望他们占据
Dialogue: 0,0:22:00.02,0:22:03.75,*Default,NTP,0000,0000,0000,,所有可用的空白空间填充。
Dialogue: 0,0:22:03.75,0:22:05.33,*Default,NTP,0000,0000,0000,,所以在那种情况下，
Dialogue: 0,0:22:05.33,0:22:07.93,*Default,NTP,0000,0000,0000,,我们可以将它们设置为内联元素
Dialogue: 0,0:22:07.93,0:22:10.35,*Default,NTP,0000,0000,0000,,或者可能更有用，
Dialogue: 0,0:22:10.35,0:22:12.96,*Default,NTP,0000,0000,0000,,我们可以将它们设置为 inline-block 元素
Dialogue: 0,0:22:12.96,0:22:16.97,*Default,NTP,0000,0000,0000,,因为这样我们仍然可以像往常一样应用盒子模型。
Dialogue: 0,0:00:01.28,0:00:04.07,*Default,NTP,0000,0000,0000,,So, now that you got the fundamentals
Dialogue: 0,0:00:04.07,0:00:06.06,*Default,NTP,0000,0000,0000,,of the box model down,
Dialogue: 0,0:00:06.06,0:00:10.04,*Default,NTP,0000,0000,0000,,let's go one step further and talk about different types
Dialogue: 0,0:00:10.04,0:00:13.32,*Default,NTP,0000,0000,0000,,of boxes that exist in the box model.
Dialogue: 0,0:00:15.34,0:00:17.31,*Default,NTP,0000,0000,0000,,And maybe you had already noticed
Dialogue: 0,0:00:17.31,0:00:21.88,*Default,NTP,0000,0000,0000,,that there are different types of boxes in CSS.
Dialogue: 0,0:00:21.88,0:00:25.48,*Default,NTP,0000,0000,0000,,So let's inspect this element here to show you what I mean.
Dialogue: 0,0:00:29.67,0:00:30.91,*Default,NTP,0000,0000,0000,,So this one, for example,
Dialogue: 0,0:00:30.91,0:00:35.60,*Default,NTP,0000,0000,0000,,and you see that this h2 element occupies all the space
Dialogue: 0,0:00:35.60,0:00:37.34,*Default,NTP,0000,0000,0000,,that it can occupy,
Dialogue: 0,0:00:37.34,0:00:40.32,*Default,NTP,0000,0000,0000,,so basically it goes all the way from the left side
Dialogue: 0,0:00:40.32,0:00:43.26,*Default,NTP,0000,0000,0000,,to the right side, right?
Dialogue: 0,0:00:43.26,0:00:47.22,*Default,NTP,0000,0000,0000,,And the same is true, for example, for this entire header,
Dialogue: 0,0:00:47.22,0:00:51.71,*Default,NTP,0000,0000,0000,,of course, for this entire article and the header as well.
Dialogue: 0,0:00:51.71,0:00:55.13,*Default,NTP,0000,0000,0000,,And really most of the elements are like this,
Dialogue: 0,0:00:55.13,0:00:57.41,*Default,NTP,0000,0000,0000,,but then there are also other elements.
Dialogue: 0,0:00:57.41,0:01:01.23,*Default,NTP,0000,0000,0000,,So other boxes so to say, like this one.
Dialogue: 0,0:01:02.25,0:01:04.69,*Default,NTP,0000,0000,0000,,So here we have this strong element,
Dialogue: 0,0:01:04.69,0:01:08.37,*Default,NTP,0000,0000,0000,,but you see that it only occupies exactly the space
Dialogue: 0,0:01:08.37,0:01:10.93,*Default,NTP,0000,0000,0000,,where its content actually is.
Dialogue: 0,0:01:10.93,0:01:13.38,*Default,NTP,0000,0000,0000,,And the same thing is true, for example,
Dialogue: 0,0:01:13.38,0:01:14.99,*Default,NTP,0000,0000,0000,,for this image here.
Dialogue: 0,0:01:16.04,0:01:19.48,*Default,NTP,0000,0000,0000,,So you'll see, it's only really 50x50 pixels,
Dialogue: 0,0:01:19.48,0:01:23.52,*Default,NTP,0000,0000,0000,,which is exactly the size of the content itself.
Dialogue: 0,0:01:23.52,0:01:28.12,*Default,NTP,0000,0000,0000,,And for example, the same thing here with this anchor tag,
Dialogue: 0,0:01:28.12,0:01:30.28,*Default,NTP,0000,0000,0000,,which again you will now see
Dialogue: 0,0:01:30.28,0:01:32.75,*Default,NTP,0000,0000,0000,,that it occupies exactly the width
Dialogue: 0,0:01:32.75,0:01:35.45,*Default,NTP,0000,0000,0000,,that is needed for its content.
Dialogue: 0,0:01:35.45,0:01:38.27,*Default,NTP,0000,0000,0000,,So these types of boxes that only occupied
Dialogue: 0,0:01:38.27,0:01:41.79,*Default,NTP,0000,0000,0000,,exactly the space that they need for its content
Dialogue: 0,0:01:41.79,0:01:44.52,*Default,NTP,0000,0000,0000,,is what we call inline boxes,
Dialogue: 0,0:01:44.52,0:01:47.42,*Default,NTP,0000,0000,0000,,and on the other hand, all these other boxes.
Dialogue: 0,0:01:48.75,0:01:53.18,*Default,NTP,0000,0000,0000,,So for example, this paragraph, or this h3 heading,
Dialogue: 0,0:01:53.18,0:01:58.10,*Default,NTP,0000,0000,0000,,these we call block-level boxes or block-level elements.
Dialogue: 0,0:01:58.10,0:02:01.03,*Default,NTP,0000,0000,0000,,So block-level elements or boxes
Dialogue: 0,0:02:01.03,0:02:03.78,*Default,NTP,0000,0000,0000,,occupy all the space that they can,
Dialogue: 0,0:02:03.78,0:02:07.39,*Default,NTP,0000,0000,0000,,and they basically create line breaks after them.
Dialogue: 0,0:02:07.39,0:02:08.41,*Default,NTP,0000,0000,0000,,Or in other words,
Dialogue: 0,0:02:08.41,0:02:12.84,*Default,NTP,0000,0000,0000,,they cannot be side-by-side with one another, right?
Dialogue: 0,0:02:12.84,0:02:13.77,*Default,NTP,0000,0000,0000,,So of course,
Dialogue: 0,0:02:13.77,0:02:16.95,*Default,NTP,0000,0000,0000,,if they take up all the space they need horizontally,
Dialogue: 0,0:02:16.95,0:02:20.40,*Default,NTP,0000,0000,0000,,then of course they cannot be side-by-side.
Dialogue: 0,0:02:20.40,0:02:22.79,*Default,NTP,0000,0000,0000,,That makes sense, right?
Dialogue: 0,0:02:22.79,0:02:24.95,*Default,NTP,0000,0000,0000,,So these are the fundamental differences
Dialogue: 0,0:02:24.95,0:02:28.50,*Default,NTP,0000,0000,0000,,between block-level boxes and inline boxes.
Dialogue: 0,0:02:28.50,0:02:29.87,*Default,NTP,0000,0000,0000,,But there are some more,
Dialogue: 0,0:02:29.87,0:02:32.33,*Default,NTP,0000,0000,0000,,so let's take a look at a comparison.
Dialogue: 0,0:02:33.86,0:02:37.22,*Default,NTP,0000,0000,0000,,So here I highlighted all of the block-level elements
Dialogue: 0,0:02:37.22,0:02:41.06,*Default,NTP,0000,0000,0000,,or block-level boxes that are on our page right now.
Dialogue: 0,0:02:41.06,0:02:42.98,*Default,NTP,0000,0000,0000,,And as I already mentioned,
Dialogue: 0,0:02:42.98,0:02:47.00,*Default,NTP,0000,0000,0000,,these elements are basically formatted as blocks.
Dialogue: 0,0:02:47.00,0:02:49.56,*Default,NTP,0000,0000,0000,,So big blocks of content,
Dialogue: 0,0:02:49.56,0:02:54.08,*Default,NTP,0000,0000,0000,,which occupies 100% of the parent element's width.
Dialogue: 0,0:02:54.08,0:02:57.17,*Default,NTP,0000,0000,0000,,And that is true even if the content itself
Dialogue: 0,0:02:57.17,0:02:59.77,*Default,NTP,0000,0000,0000,,wouldn't actually require so much space.
Dialogue: 0,0:02:59.77,0:03:02.98,*Default,NTP,0000,0000,0000,,For example, this "What is HTML" heading,
Dialogue: 0,0:03:02.98,0:03:06.55,*Default,NTP,0000,0000,0000,,actually it wouldn't need the entire line, right?
Dialogue: 0,0:03:06.55,0:03:09.21,*Default,NTP,0000,0000,0000,,But it is still a block-level element
Dialogue: 0,0:03:09.21,0:03:11.82,*Default,NTP,0000,0000,0000,,because then they can be stacked vertically
Dialogue: 0,0:03:11.82,0:03:14.87,*Default,NTP,0000,0000,0000,,one after another by default.
Dialogue: 0,0:03:14.87,0:03:17.49,*Default,NTP,0000,0000,0000,,Now, one thing that is very important to mention
Dialogue: 0,0:03:17.49,0:03:20.02,*Default,NTP,0000,0000,0000,,is that the box model applies exactly
Dialogue: 0,0:03:20.02,0:03:23.37,*Default,NTP,0000,0000,0000,,as I showed you before to block-level elements
Dialogue: 0,0:03:23.37,0:03:27.26,*Default,NTP,0000,0000,0000,,while the same is not true for inline elements,
Dialogue: 0,0:03:27.26,0:03:30.59,*Default,NTP,0000,0000,0000,,as we will see in a second. Okay?
Dialogue: 0,0:03:30.59,0:03:34.10,*Default,NTP,0000,0000,0000,,Now by default, most of the HTML elements
Dialogue: 0,0:03:34.10,0:03:36.50,*Default,NTP,0000,0000,0000,,are actually block-level elements,
Dialogue: 0,0:03:36.50,0:03:39.30,*Default,NTP,0000,0000,0000,,so things like the body, main, header,
Dialogue: 0,0:03:39.30,0:03:41.10,*Default,NTP,0000,0000,0000,,and so on and so forth.
Dialogue: 0,0:03:41.10,0:03:44.31,*Default,NTP,0000,0000,0000,,So most of the elements really that we use
Dialogue: 0,0:03:44.31,0:03:46.22,*Default,NTP,0000,0000,0000,,are block-level elements,
Dialogue: 0,0:03:46.22,0:03:50.63,*Default,NTP,0000,0000,0000,,so we can also say that they create block-level boxes.
Dialogue: 0,0:03:50.63,0:03:51.91,*Default,NTP,0000,0000,0000,,All right.
Dialogue: 0,0:03:51.91,0:03:55.24,*Default,NTP,0000,0000,0000,,Now, one thing that we can do with CSS
Dialogue: 0,0:03:55.24,0:03:59.98,*Default,NTP,0000,0000,0000,,is to change from inline boxes to block-level boxes.
Dialogue: 0,0:03:59.98,0:04:03.45,*Default,NTP,0000,0000,0000,,And we can do that with the display property set
Dialogue: 0,0:04:03.45,0:04:06.07,*Default,NTP,0000,0000,0000,,to the value of block,
Dialogue: 0,0:04:06.07,0:04:09.01,*Default,NTP,0000,0000,0000,,but we will do that in practice in a second.
Dialogue: 0,0:04:09.01,0:04:10.80,*Default,NTP,0000,0000,0000,,But for now, what I want to do
Dialogue: 0,0:04:10.80,0:04:14.02,*Default,NTP,0000,0000,0000,,is to look at the inline element
Dialogue: 0,0:04:14.02,0:04:17.06,*Default,NTP,0000,0000,0000,,and how it's different from block-level elements.
Dialogue: 0,0:04:18.78,0:04:23.78,*Default,NTP,0000,0000,0000,,So here I marked the inline elements with this red border,
Dialogue: 0,0:04:24.45,0:04:26.93,*Default,NTP,0000,0000,0000,,and you see that as expected,
Dialogue: 0,0:04:26.93,0:04:29.55,*Default,NTP,0000,0000,0000,,they only occupied exactly the space
Dialogue: 0,0:04:29.55,0:04:32.61,*Default,NTP,0000,0000,0000,,that is needed for its content.
Dialogue: 0,0:04:32.61,0:04:35.52,*Default,NTP,0000,0000,0000,,They also don't create any line breaks after
Dialogue: 0,0:04:35.52,0:04:37.32,*Default,NTP,0000,0000,0000,,or before the element.
Dialogue: 0,0:04:37.32,0:04:40.65,*Default,NTP,0000,0000,0000,,And so therefore they can simply stay inside
Dialogue: 0,0:04:40.65,0:04:44.09,*Default,NTP,0000,0000,0000,,of their parent elements without creating
Dialogue: 0,0:04:44.09,0:04:45.89,*Default,NTP,0000,0000,0000,,any additional space.
Dialogue: 0,0:04:45.89,0:04:49.84,*Default,NTP,0000,0000,0000,,And this is exactly what makes sense for smaller elements,
Dialogue: 0,0:04:49.84,0:04:53.64,*Default,NTP,0000,0000,0000,,like the strong element, the em element,
Dialogue: 0,0:04:53.64,0:04:56.13,*Default,NTP,0000,0000,0000,,or anchor elements, right?
Dialogue: 0,0:04:56.13,0:04:59.85,*Default,NTP,0000,0000,0000,,We wouldn't want these elements to create a new line
Dialogue: 0,0:04:59.85,0:05:03.04,*Default,NTP,0000,0000,0000,,and occupy all the width that they can.
Dialogue: 0,0:05:03.04,0:05:05.12,*Default,NTP,0000,0000,0000,,That just wouldn't make any sense,
Dialogue: 0,0:05:05.12,0:05:07.29,*Default,NTP,0000,0000,0000,,and therefore that's why we have
Dialogue: 0,0:05:07.29,0:05:09.89,*Default,NTP,0000,0000,0000,,these different types of boxes.
Dialogue: 0,0:05:09.89,0:05:13.94,*Default,NTP,0000,0000,0000,,But anyway, now about the box model, as I said,
Dialogue: 0,0:05:13.94,0:05:17.11,*Default,NTP,0000,0000,0000,,it works differently in inline elements.
Dialogue: 0,0:05:17.11,0:05:19.12,*Default,NTP,0000,0000,0000,,So for inline elements,
Dialogue: 0,0:05:19.12,0:05:23.69,*Default,NTP,0000,0000,0000,,the height and width properties do not have any effect.
Dialogue: 0,0:05:23.69,0:05:28.14,*Default,NTP,0000,0000,0000,,Also paddings and margins are only applied horizontally
Dialogue: 0,0:05:28.14,0:05:31.43,*Default,NTP,0000,0000,0000,,or in other words, on the left and right sides,
Dialogue: 0,0:05:31.43,0:05:34.36,*Default,NTP,0000,0000,0000,,but not on the top and bottom.
Dialogue: 0,0:05:34.36,0:05:35.96,*Default,NTP,0000,0000,0000,,And this fundamental difference
Dialogue: 0,0:05:35.96,0:05:39.26,*Default,NTP,0000,0000,0000,,about how the box model works for inland elements
Dialogue: 0,0:05:39.26,0:05:42.69,*Default,NTP,0000,0000,0000,,is extremely important to always keep in mind
Dialogue: 0,0:05:42.69,0:05:44.35,*Default,NTP,0000,0000,0000,,and to never forget,
Dialogue: 0,0:05:44.35,0:05:47.04,*Default,NTP,0000,0000,0000,,because this is a mistake that I see beginners
Dialogue: 0,0:05:47.04,0:05:49.07,*Default,NTP,0000,0000,0000,,make all the times,
Dialogue: 0,0:05:49.07,0:05:51.84,*Default,NTP,0000,0000,0000,,which is basically do not understand
Dialogue: 0,0:05:51.84,0:05:55.55,*Default,NTP,0000,0000,0000,,why certain properties of the box model do not work
Dialogue: 0,0:05:55.55,0:05:59.28,*Default,NTP,0000,0000,0000,,as expected when applied to inline elements.
Dialogue: 0,0:05:59.28,0:06:02.60,*Default,NTP,0000,0000,0000,,So take note of this as it is very important
Dialogue: 0,0:06:02.60,0:06:03.96,*Default,NTP,0000,0000,0000,,to always keep in mind.
Dialogue: 0,0:06:04.91,0:06:06.36,*Default,NTP,0000,0000,0000,,Now by default,
Dialogue: 0,0:06:06.36,0:06:09.52,*Default,NTP,0000,0000,0000,,some of the elements that are inline elements,
Dialogue: 0,0:06:09.52,0:06:13.53,*Default,NTP,0000,0000,0000,,so which create inline boxes are the anchor, image,
Dialogue: 0,0:06:13.53,0:06:18.50,*Default,NTP,0000,0000,0000,,strong, em, the button as well, and many more.
Dialogue: 0,0:06:18.50,0:06:21.66,*Default,NTP,0000,0000,0000,,Now, just like we can use to display property
Dialogue: 0,0:06:21.66,0:06:24.78,*Default,NTP,0000,0000,0000,,to make any element a block-level element,
Dialogue: 0,0:06:24.78,0:06:28.09,*Default,NTP,0000,0000,0000,,we can also use display set to inline
Dialogue: 0,0:06:28.09,0:06:31.00,*Default,NTP,0000,0000,0000,,in order to transform any block-level element
Dialogue: 0,0:06:31.00,0:06:33.18,*Default,NTP,0000,0000,0000,,to an inline element.
Dialogue: 0,0:06:33.18,0:06:36.22,*Default,NTP,0000,0000,0000,,And actually let's now go back to our code
Dialogue: 0,0:06:36.22,0:06:38.75,*Default,NTP,0000,0000,0000,,to see some of these things in action.
Dialogue: 0,0:06:40.35,0:06:44.46,*Default,NTP,0000,0000,0000,,And let's start by trying to format these links here
Dialogue: 0,0:06:44.46,0:06:45.90,*Default,NTP,0000,0000,0000,,that are in the header.
Dialogue: 0,0:06:47.76,0:06:52.76,*Default,NTP,0000,0000,0000,,So let's select them, but I will do that more down.
Dialogue: 0,0:06:52.80,0:06:55.22,*Default,NTP,0000,0000,0000,,Let me actually create some comments here.
Dialogue: 0,0:06:57.22,0:07:01.85,*Default,NTP,0000,0000,0000,,So let's say that these are like page sections
Dialogue: 0,0:07:01.85,0:07:03.30,*Default,NTP,0000,0000,0000,,or something like that.
Dialogue: 0,0:07:04.30,0:07:08.52,*Default,NTP,0000,0000,0000,,So basically all the big dividing pieces of our page.
Dialogue: 0,0:07:08.52,0:07:10.16,*Default,NTP,0000,0000,0000,,So we have the body, of course,
Dialogue: 0,0:07:10.16,0:07:12.54,*Default,NTP,0000,0000,0000,,the container, the main header,
Dialogue: 0,0:07:12.54,0:07:16.22,*Default,NTP,0000,0000,0000,,the navigation, article, and all of that.
Dialogue: 0,0:07:16.22,0:07:18.20,*Default,NTP,0000,0000,0000,,And then here is where we start to have,
Dialogue: 0,0:07:18.20,0:07:21.07,*Default,NTP,0000,0000,0000,,or like smaller elements.
Dialogue: 0,0:07:22.00,0:07:23.97,*Default,NTP,0000,0000,0000,,And these titles here don't really matter.
Dialogue: 0,0:07:23.97,0:07:26.54,*Default,NTP,0000,0000,0000,,I just want to have like a visual separation
Dialogue: 0,0:07:26.54,0:07:27.76,*Default,NTP,0000,0000,0000,,inside of the code.
Dialogue: 0,0:07:29.75,0:07:33.66,*Default,NTP,0000,0000,0000,,Okay, so let's go down here all the way down.
Dialogue: 0,0:07:34.80,0:07:36.87,*Default,NTP,0000,0000,0000,,Maybe let's see here.
Dialogue: 0,0:07:36.87,0:07:39.20,*Default,NTP,0000,0000,0000,,And so I want to select all the links
Dialogue: 0,0:07:39.20,0:07:42.71,*Default,NTP,0000,0000,0000,,that are inside of the navigation.
Dialogue: 0,0:07:42.71,0:07:47.71,*Default,NTP,0000,0000,0000,,So let's say navigation and then the links in there.
Dialogue: 0,0:07:48.06,0:07:48.89,*Default,NTP,0000,0000,0000,,And as always,
Dialogue: 0,0:07:48.89,0:07:53.00,*Default,NTP,0000,0000,0000,,I should use the link pseudo class to actually style them.
Dialogue: 0,0:07:54.21,0:07:57.34,*Default,NTP,0000,0000,0000,,Now to see this a little bit better, what happens,
Dialogue: 0,0:07:58.94,0:08:02.70,*Default,NTP,0000,0000,0000,,let's give them a color, a background color,
Dialogue: 0,0:08:02.70,0:08:07.69,*Default,NTP,0000,0000,0000,,like orange red, and now I need to manually reload here.
Dialogue: 0,0:08:09.61,0:08:13.20,*Default,NTP,0000,0000,0000,,Okay, so we got that background color
Dialogue: 0,0:08:13.20,0:08:16.87,*Default,NTP,0000,0000,0000,,and now let's start by adding some margin here,
Dialogue: 0,0:08:16.87,0:08:21.15,*Default,NTP,0000,0000,0000,,just so we see that the box model does in fact,
Dialogue: 0,0:08:21.15,0:08:23.68,*Default,NTP,0000,0000,0000,,not applied way that we thought it would.
Dialogue: 0,0:08:24.53,0:08:28.02,*Default,NTP,0000,0000,0000,,So let's say 20 pixels and give it a save.
Dialogue: 0,0:08:28.86,0:08:33.20,*Default,NTP,0000,0000,0000,,And you see that some margin was edit horizontally.
Dialogue: 0,0:08:33.20,0:08:36.79,*Default,NTP,0000,0000,0000,,So on the left and right side, right.
Dialogue: 0,0:08:36.79,0:08:41.79,*Default,NTP,0000,0000,0000,,But what did not happen was that vertical space was created.
Dialogue: 0,0:08:42.26,0:08:45.63,*Default,NTP,0000,0000,0000,,So the top and bottom margins remained unchanged.
Dialogue: 0,0:08:47.05,0:08:50.98,*Default,NTP,0000,0000,0000,,Now, if we check this out here in the box model,
Dialogue: 0,0:08:50.98,0:08:54.76,*Default,NTP,0000,0000,0000,,in the dev tools, then it will still appear down here,
Dialogue: 0,0:08:56.90,0:08:58.90,*Default,NTP,0000,0000,0000,,some more space here.
Dialogue: 0,0:08:58.90,0:09:01.84,*Default,NTP,0000,0000,0000,,So you see that the 20 value does still appear,
Dialogue: 0,0:09:01.84,0:09:04.57,*Default,NTP,0000,0000,0000,,but then here on the colored overlay,
Dialogue: 0,0:09:05.76,0:09:09.75,*Default,NTP,0000,0000,0000,,so here this orange, actually did not create any space,
Dialogue: 0,0:09:09.75,0:09:12.84,*Default,NTP,0000,0000,0000,,even though it says 20 here, right?
Dialogue: 0,0:09:12.84,0:09:14.72,*Default,NTP,0000,0000,0000,,And so, as you know by now,
Dialogue: 0,0:09:14.72,0:09:17.65,*Default,NTP,0000,0000,0000,,the reason for that is that the anchor element
Dialogue: 0,0:09:17.65,0:09:20.47,*Default,NTP,0000,0000,0000,,is an inline element where the box model
Dialogue: 0,0:09:20.47,0:09:23.34,*Default,NTP,0000,0000,0000,,does not create any vertical space,
Dialogue: 0,0:09:23.34,0:09:25.88,*Default,NTP,0000,0000,0000,,and the same is true for padding.
Dialogue: 0,0:09:28.82,0:09:30.75,*Default,NTP,0000,0000,0000,,So padding of 20 pixels.
Dialogue: 0,0:09:33.14,0:09:34.70,*Default,NTP,0000,0000,0000,,So let's see.
Dialogue: 0,0:09:34.70,0:09:39.48,*Default,NTP,0000,0000,0000,,And now it does actually look as if some space was created,
Dialogue: 0,0:09:39.48,0:09:43.57,*Default,NTP,0000,0000,0000,,but that is only true for inside of the element
Dialogue: 0,0:09:43.57,0:09:47.41,*Default,NTP,0000,0000,0000,,because in fact, the anchor content,
Dialogue: 0,0:09:47.41,0:09:50.10,*Default,NTP,0000,0000,0000,,so the anchor content itself is still
Dialogue: 0,0:09:50.10,0:09:52.03,*Default,NTP,0000,0000,0000,,in the exact same place,
Dialogue: 0,0:09:52.03,0:09:54.57,*Default,NTP,0000,0000,0000,,but if this was a block-level element,
Dialogue: 0,0:09:54.57,0:09:58.00,*Default,NTP,0000,0000,0000,,then all of this would have moved down a little bit.
Dialogue: 0,0:09:58.00,0:10:00.57,*Default,NTP,0000,0000,0000,,So basically the fill area of this element
Dialogue: 0,0:10:00.57,0:10:04.46,*Default,NTP,0000,0000,0000,,has been expanded and filled with the background color,
Dialogue: 0,0:10:04.46,0:10:07.55,*Default,NTP,0000,0000,0000,,but no new space was in fact created.
Dialogue: 0,0:10:08.70,0:10:10.25,*Default,NTP,0000,0000,0000,,Okay?
Dialogue: 0,0:10:10.25,0:10:13.13,*Default,NTP,0000,0000,0000,,But if we actually want to have that space,
Dialogue: 0,0:10:13.13,0:10:17.39,*Default,NTP,0000,0000,0000,,and if we want the elements to be one after another,
Dialogue: 0,0:10:17.39,0:10:21.39,*Default,NTP,0000,0000,0000,,then of course we can change them to block-level elements.
Dialogue: 0,0:10:22.47,0:10:25.86,*Default,NTP,0000,0000,0000,,So that is exactly what I showed you in the slide
Dialogue: 0,0:10:25.86,0:10:28.88,*Default,NTP,0000,0000,0000,,by using the display property
Dialogue: 0,0:10:28.88,0:10:31.96,*Default,NTP,0000,0000,0000,,and set it to the value of block.
Dialogue: 0,0:10:31.96,0:10:34.52,*Default,NTP,0000,0000,0000,,So this will then render the inline element
Dialogue: 0,0:10:34.52,0:10:36.03,*Default,NTP,0000,0000,0000,,as a block-level element.
Dialogue: 0,0:10:36.96,0:10:38.66,*Default,NTP,0000,0000,0000,,So what do you think will happen
Dialogue: 0,0:10:38.66,0:10:40.18,*Default,NTP,0000,0000,0000,,once I save this now?
Dialogue: 0,0:10:41.30,0:10:43.22,*Default,NTP,0000,0000,0000,,And there we go,
Dialogue: 0,0:10:43.22,0:10:48.05,*Default,NTP,0000,0000,0000,,now all of these elements occupy all the width that they can
Dialogue: 0,0:10:48.05,0:10:50.05,*Default,NTP,0000,0000,0000,,and also they have now actually
Dialogue: 0,0:10:50.05,0:10:53.06,*Default,NTP,0000,0000,0000,,also vertical margins between them.
Dialogue: 0,0:10:53.06,0:10:58.06,*Default,NTP,0000,0000,0000,,Now they are kind of outside of this header element now
Dialogue: 0,0:10:58.22,0:11:02.63,*Default,NTP,0000,0000,0000,,because we set the header element to a fixed height,
Dialogue: 0,0:11:02.63,0:11:05.08,*Default,NTP,0000,0000,0000,,so in one of the previous lectures.
Dialogue: 0,0:11:05.08,0:11:08.07,*Default,NTP,0000,0000,0000,,So let me show that to you with the overlay.
Dialogue: 0,0:11:10.47,0:11:12.54,*Default,NTP,0000,0000,0000,,We need some more space here.
Dialogue: 0,0:11:12.54,0:11:15.89,*Default,NTP,0000,0000,0000,,And so since we set the height to the header
Dialogue: 0,0:11:15.89,0:11:19.24,*Default,NTP,0000,0000,0000,,to a specific value of 80 pixels,
Dialogue: 0,0:11:19.24,0:11:21.73,*Default,NTP,0000,0000,0000,,then the content no longer fits in there,
Dialogue: 0,0:11:21.73,0:11:24.34,*Default,NTP,0000,0000,0000,,and so the element did not expand
Dialogue: 0,0:11:24.34,0:11:26.54,*Default,NTP,0000,0000,0000,,in order to fit the content.
Dialogue: 0,0:11:26.54,0:11:28.15,*Default,NTP,0000,0000,0000,,So that's the reason why usually
Dialogue: 0,0:11:28.15,0:11:32.23,*Default,NTP,0000,0000,0000,,we don't set a fixed height on elements.
Dialogue: 0,0:11:32.23,0:11:33.97,*Default,NTP,0000,0000,0000,,So let me go back and change that,
Dialogue: 0,0:11:35.71,0:11:37.96,*Default,NTP,0000,0000,0000,,so that was just a demo anyway.
Dialogue: 0,0:11:39.10,0:11:43.04,*Default,NTP,0000,0000,0000,,So yeah, here is the height that we set to 80.
Dialogue: 0,0:11:43.04,0:11:46.43,*Default,NTP,0000,0000,0000,,So let me comment that out, save it again.
Dialogue: 0,0:11:46.43,0:11:48.80,*Default,NTP,0000,0000,0000,,Now the element expanded vertically here
Dialogue: 0,0:11:48.80,0:11:53.13,*Default,NTP,0000,0000,0000,,to account for the additional space that is required.
Dialogue: 0,0:11:53.13,0:11:56.13,*Default,NTP,0000,0000,0000,,Okay. So hopefully that makes sense.
Dialogue: 0,0:11:56.13,0:12:00.76,*Default,NTP,0000,0000,0000,,But the main point here is that these anchor elements here
Dialogue: 0,0:12:00.76,0:12:02.88,*Default,NTP,0000,0000,0000,,now do satisfy all the conditions
Dialogue: 0,0:12:02.88,0:12:05.40,*Default,NTP,0000,0000,0000,,of being a block-level element.
Dialogue: 0,0:12:05.40,0:12:08.37,*Default,NTP,0000,0000,0000,,So the box model applies to them normally,
Dialogue: 0,0:12:08.37,0:12:12.37,*Default,NTP,0000,0000,0000,,and they occupy 100% of the available width,
Dialogue: 0,0:12:12.37,0:12:15.74,*Default,NTP,0000,0000,0000,,and so therefore they appear one after another
Dialogue: 0,0:12:15.74,0:12:17.90,*Default,NTP,0000,0000,0000,,nicely formatted as blocks.
Dialogue: 0,0:12:19.62,0:12:21.01,*Default,NTP,0000,0000,0000,,All right.
Dialogue: 0,0:12:21.01,0:12:24.05,*Default,NTP,0000,0000,0000,,So they occupy all the space as we see here,
Dialogue: 0,0:12:24.05,0:12:26.79,*Default,NTP,0000,0000,0000,,which of course includes the margin.
Dialogue: 0,0:12:26.79,0:12:31.79,*Default,NTP,0000,0000,0000,,So each of these, if we take a look has some margin, right?
Dialogue: 0,0:12:31.90,0:12:36.16,*Default,NTP,0000,0000,0000,,So that is this kind of orange color here.
Dialogue: 0,0:12:36.16,0:12:38.77,*Default,NTP,0000,0000,0000,,And so that is part of the entire space
Dialogue: 0,0:12:38.77,0:12:43.44,*Default,NTP,0000,0000,0000,,that the element itself requires, all right?
Dialogue: 0,0:12:43.44,0:12:45.28,*Default,NTP,0000,0000,0000,,Well, let's go back down here
Dialogue: 0,0:12:45.28,0:12:47.39,*Default,NTP,0000,0000,0000,,and actually turn all of this off
Dialogue: 0,0:12:48.31,0:12:52.04,*Default,NTP,0000,0000,0000,,because this was really just a demo.
Dialogue: 0,0:12:52.04,0:12:54.01,*Default,NTP,0000,0000,0000,,Okay? And now of course,
Dialogue: 0,0:12:54.01,0:12:56.80,*Default,NTP,0000,0000,0000,,we will see the header shrink back
Dialogue: 0,0:12:56.80,0:13:00.39,*Default,NTP,0000,0000,0000,,to only occupy vertically here the space that it needs.
Dialogue: 0,0:13:01.24,0:13:03.69,*Default,NTP,0000,0000,0000,,All right, so as we keep adding more and more elements,
Dialogue: 0,0:13:03.69,0:13:05.35,*Default,NTP,0000,0000,0000,,then this should grow,
Dialogue: 0,0:13:05.35,0:13:07.39,*Default,NTP,0000,0000,0000,,which is exactly what's happened before
Dialogue: 0,0:13:07.39,0:13:09.27,*Default,NTP,0000,0000,0000,,when these links were bigger,
Dialogue: 0,0:13:09.27,0:13:11.35,*Default,NTP,0000,0000,0000,,but now they're back to being small
Dialogue: 0,0:13:11.35,0:13:15.55,*Default,NTP,0000,0000,0000,,and therefore all that space we had was not required.
Dialogue: 0,0:13:15.55,0:13:20.04,*Default,NTP,0000,0000,0000,,And now next, let's actually quickly try the opposite
Dialogue: 0,0:13:20.04,0:13:24.96,*Default,NTP,0000,0000,0000,,and change some block-level elements to inline elements.
Dialogue: 0,0:13:25.92,0:13:27.40,*Default,NTP,0000,0000,0000,,So for example,
Dialogue: 0,0:13:27.40,0:13:28.66,*Default,NTP,0000,0000,0000,,let's try what happens
Dialogue: 0,0:13:28.66,0:13:33.26,*Default,NTP,0000,0000,0000,,when we make the list elements as inline.
Dialogue: 0,0:13:33.26,0:13:35.77,*Default,NTP,0000,0000,0000,,Display, inline.
Dialogue: 0,0:13:39.26,0:13:40.88,*Default,NTP,0000,0000,0000,,Let's remove this actually.
Dialogue: 0,0:13:41.76,0:13:45.87,*Default,NTP,0000,0000,0000,,And now you'll see that these three elements
Dialogue: 0,0:13:45.87,0:13:48.45,*Default,NTP,0000,0000,0000,,are now basically side-by-side
Dialogue: 0,0:13:48.45,0:13:50.85,*Default,NTP,0000,0000,0000,,and occupy only the space that they need.
Dialogue: 0,0:13:51.92,0:13:53.83,*Default,NTP,0000,0000,0000,,And actually let's bring this back
Dialogue: 0,0:13:53.83,0:13:55.82,*Default,NTP,0000,0000,0000,,because as I mentioned,
Dialogue: 0,0:13:55.82,0:13:58.07,*Default,NTP,0000,0000,0000,,the dev tools are really so important
Dialogue: 0,0:13:58.07,0:14:03.07,*Default,NTP,0000,0000,0000,,especially for overlaying like these boxes, right?
Dialogue: 0,0:14:04.91,0:14:07.96,*Default,NTP,0000,0000,0000,,So now the boxes are side-by-side like this
Dialogue: 0,0:14:07.96,0:14:10.42,*Default,NTP,0000,0000,0000,,because they are inline boxes.
Dialogue: 0,0:14:10.42,0:14:13.47,*Default,NTP,0000,0000,0000,,So they no longer create the line breaks after them
Dialogue: 0,0:14:13.47,0:14:17.01,*Default,NTP,0000,0000,0000,,and only occupied a space that they need.
Dialogue: 0,0:14:17.01,0:14:18.16,*Default,NTP,0000,0000,0000,,Let's try the same.
Dialogue: 0,0:14:19.22,0:14:22.53,*Default,NTP,0000,0000,0000,,I'll turn it off here and try the same on the paragraphs.
Dialogue: 0,0:14:28.42,0:14:32.19,*Default,NTP,0000,0000,0000,,And so that looks even stranger
Dialogue: 0,0:14:32.19,0:14:34.55,*Default,NTP,0000,0000,0000,,because all the texts basically collapsed
Dialogue: 0,0:14:34.55,0:14:39.55,*Default,NTP,0000,0000,0000,,just into one big line of text, it looks like, right?
Dialogue: 0,0:14:45.52,0:14:47.36,*Default,NTP,0000,0000,0000,,So again, each of these elements now
Dialogue: 0,0:14:47.36,0:14:50.56,*Default,NTP,0000,0000,0000,,basically only occupies the space that it needs.
Dialogue: 0,0:14:52.60,0:14:54.93,*Default,NTP,0000,0000,0000,,All right, but let's remove this
Dialogue: 0,0:14:54.93,0:14:58.09,*Default,NTP,0000,0000,0000,,because it doesn't make much sense in the situation,
Dialogue: 0,0:14:58.09,0:15:02.39,*Default,NTP,0000,0000,0000,,but at some situations it actually makes a lot of sense.
Dialogue: 0,0:15:02.39,0:15:03.96,*Default,NTP,0000,0000,0000,,Now, in many situations,
Dialogue: 0,0:15:03.96,0:15:07.01,*Default,NTP,0000,0000,0000,,what makes even more sense is to transform
Dialogue: 0,0:15:07.01,0:15:09.84,*Default,NTP,0000,0000,0000,,a block-level element into something called
Dialogue: 0,0:15:09.84,0:15:12.49,*Default,NTP,0000,0000,0000,,an inline-block element.
Dialogue: 0,0:15:12.49,0:15:16.90,*Default,NTP,0000,0000,0000,,So basically that's a mix of inline and block-level.
Dialogue: 0,0:15:16.90,0:15:19.73,*Default,NTP,0000,0000,0000,,So let's quickly check out what that means.
Dialogue: 0,0:15:21.52,0:15:24.94,*Default,NTP,0000,0000,0000,,So here, we have a quick summary of both the block-level
Dialogue: 0,0:15:24.94,0:15:26.64,*Default,NTP,0000,0000,0000,,and the inline boxes.
Dialogue: 0,0:15:26.64,0:15:28.06,*Default,NTP,0000,0000,0000,,So we already know that,
Dialogue: 0,0:15:28.06,0:15:31.20,*Default,NTP,0000,0000,0000,,so we don't need to go over all that again.
Dialogue: 0,0:15:31.20,0:15:34.40,*Default,NTP,0000,0000,0000,,But then there's basically a third type of box,
Dialogue: 0,0:15:34.40,0:15:36.86,*Default,NTP,0000,0000,0000,,which is a mix between these two.
Dialogue: 0,0:15:36.86,0:15:41.86,*Default,NTP,0000,0000,0000,,And so that is, as I said before, the inline-block box.
Dialogue: 0,0:15:42.00,0:15:44.30,*Default,NTP,0000,0000,0000,,So inline-block boxes,
Dialogue: 0,0:15:44.30,0:15:47.93,*Default,NTP,0000,0000,0000,,they look like inlines from the outside,
Dialogue: 0,0:15:47.93,0:15:52.93,*Default,NTP,0000,0000,0000,,but they behave like block-level elements on the inside.
Dialogue: 0,0:15:52.93,0:15:56.68,*Default,NTP,0000,0000,0000,,So what that means is that inline-block boxes
Dialogue: 0,0:15:56.68,0:16:00.97,*Default,NTP,0000,0000,0000,,do only occupied the space that they need for the content,
Dialogue: 0,0:16:00.97,0:16:05.13,*Default,NTP,0000,0000,0000,,and so therefore they do not cause any line breaks.
Dialogue: 0,0:16:05.13,0:16:09.12,*Default,NTP,0000,0000,0000,,So this is what I mean when I say that the inline-block box
Dialogue: 0,0:16:09.12,0:16:13.38,*Default,NTP,0000,0000,0000,,behaves like an inline box from the outside.
Dialogue: 0,0:16:13.38,0:16:14.97,*Default,NTP,0000,0000,0000,,However, as I said,
Dialogue: 0,0:16:14.97,0:16:18.92,*Default,NTP,0000,0000,0000,,it behaves like a block-level box on the inside,
Dialogue: 0,0:16:18.92,0:16:22.58,*Default,NTP,0000,0000,0000,,and so what that means is that the box model applies
Dialogue: 0,0:16:22.58,0:16:26.24,*Default,NTP,0000,0000,0000,,just as it does for block-level boxes.
Dialogue: 0,0:16:26.24,0:16:29.13,*Default,NTP,0000,0000,0000,,So we can still set heights and width,
Dialogue: 0,0:16:29.13,0:16:32.29,*Default,NTP,0000,0000,0000,,and we can still use margins and paddings
Dialogue: 0,0:16:32.29,0:16:36.70,*Default,NTP,0000,0000,0000,,just like on block-level boxes or on block-level elements.
Dialogue: 0,0:16:36.70,0:16:38.41,*Default,NTP,0000,0000,0000,,So these are kind of the same,
Dialogue: 0,0:16:38.41,0:16:42.08,*Default,NTP,0000,0000,0000,,so I keep using them interchangeably.
Dialogue: 0,0:16:42.08,0:16:46.23,*Default,NTP,0000,0000,0000,,So essentially, inline-block boxes really combines
Dialogue: 0,0:16:46.23,0:16:50.25,*Default,NTP,0000,0000,0000,,the best of both worlds of block-level and inline.
Dialogue: 0,0:16:50.25,0:16:53.36,*Default,NTP,0000,0000,0000,,And in order to create an inline-block element,
Dialogue: 0,0:16:53.36,0:16:56.97,*Default,NTP,0000,0000,0000,,all we have to do is to set the display property
Dialogue: 0,0:16:56.97,0:17:00.03,*Default,NTP,0000,0000,0000,,to inline-block and that's it.
Dialogue: 0,0:17:00.03,0:17:03.04,*Default,NTP,0000,0000,0000,,And so let's now see how we do that in practice
Dialogue: 0,0:17:03.04,0:17:06.80,*Default,NTP,0000,0000,0000,,and some situations where this can be extremely helpful.
Dialogue: 0,0:17:08.27,0:17:11.79,*Default,NTP,0000,0000,0000,,So let's go back here to our header links.
Dialogue: 0,0:17:11.79,0:17:13.55,*Default,NTP,0000,0000,0000,,So to this navigation,
Dialogue: 0,0:17:13.55,0:17:16.77,*Default,NTP,0000,0000,0000,,so that I can show you where an inline-block element
Dialogue: 0,0:17:16.77,0:17:18.70,*Default,NTP,0000,0000,0000,,can be very helpful.
Dialogue: 0,0:17:18.70,0:17:22.67,*Default,NTP,0000,0000,0000,,So right now there is another lot of formatting here,
Dialogue: 0,0:17:22.67,0:17:25.97,*Default,NTP,0000,0000,0000,,so like no spacing, so we need to fix that.
Dialogue: 0,0:17:27.63,0:17:32.27,*Default,NTP,0000,0000,0000,,So this was somewhere down here, right here.
Dialogue: 0,0:17:32.27,0:17:36.07,*Default,NTP,0000,0000,0000,,And so let's go back to trying to add some margins
Dialogue: 0,0:17:37.07,0:17:41.31,*Default,NTP,0000,0000,0000,,without changing anything in the display property for now.
Dialogue: 0,0:17:42.66,0:17:47.45,*Default,NTP,0000,0000,0000,,So let's say we wanted a margin of 30 pixels,
Dialogue: 0,0:17:47.45,0:17:51.09,*Default,NTP,0000,0000,0000,,and this should work because this is a horizontal space,
Dialogue: 0,0:17:51.09,0:17:54.40,*Default,NTP,0000,0000,0000,,and so that works even on inline elements.
Dialogue: 0,0:17:54.40,0:17:56.95,*Default,NTP,0000,0000,0000,,But now if I wanted to add a margin top
Dialogue: 0,0:17:59.65,0:18:04.65,*Default,NTP,0000,0000,0000,,of let's say 10 pixels, then nothing will change, right?
Dialogue: 0,0:18:05.36,0:18:08.69,*Default,NTP,0000,0000,0000,,So it's stays the same and that's exactly the behavior
Dialogue: 0,0:18:08.69,0:18:11.29,*Default,NTP,0000,0000,0000,,that we saw already at the beginning.
Dialogue: 0,0:18:11.29,0:18:15.88,*Default,NTP,0000,0000,0000,,But now if we change the display to inline-block,
Dialogue: 0,0:18:16.93,0:18:18.67,*Default,NTP,0000,0000,0000,,then see what happens.
Dialogue: 0,0:18:20.00,0:18:24.40,*Default,NTP,0000,0000,0000,,So you saw that now we got our space here.
Dialogue: 0,0:18:24.40,0:18:25.81,*Default,NTP,0000,0000,0000,,And if we check this out,
Dialogue: 0,0:18:26.87,0:18:31.66,*Default,NTP,0000,0000,0000,,then indeed you can see that orange space on the right side
Dialogue: 0,0:18:31.66,0:18:34.78,*Default,NTP,0000,0000,0000,,and then the 10 pixels on the top.
Dialogue: 0,0:18:34.78,0:18:37.84,*Default,NTP,0000,0000,0000,,So the box model is back to being applied
Dialogue: 0,0:18:37.84,0:18:40.07,*Default,NTP,0000,0000,0000,,as a block-level element,
Dialogue: 0,0:18:40.07,0:18:43.40,*Default,NTP,0000,0000,0000,,but on the outside the elements are still side-by-side
Dialogue: 0,0:18:43.40,0:18:46.30,*Default,NTP,0000,0000,0000,,and occupying only the space they need,
Dialogue: 0,0:18:46.30,0:18:48.56,*Default,NTP,0000,0000,0000,,so behaving like inline elements.
Dialogue: 0,0:18:49.55,0:18:52.64,*Default,NTP,0000,0000,0000,,So this is a great technique in some situations,
Dialogue: 0,0:18:52.64,0:18:53.98,*Default,NTP,0000,0000,0000,,even though at this point,
Dialogue: 0,0:18:53.98,0:18:57.84,*Default,NTP,0000,0000,0000,,we also have more modern ways of doing something similar,
Dialogue: 0,0:18:57.84,0:19:01.87,*Default,NTP,0000,0000,0000,,but in some cases this will actually be very good to know,
Dialogue: 0,0:19:01.87,0:19:05.72,*Default,NTP,0000,0000,0000,,and a good technique to have in your tool belt.
Dialogue: 0,0:19:05.72,0:19:07.32,*Default,NTP,0000,0000,0000,,Now just one final detail
Dialogue: 0,0:19:07.32,0:19:09.91,*Default,NTP,0000,0000,0000,,is that we should remove that margin right
Dialogue: 0,0:19:09.91,0:19:12.01,*Default,NTP,0000,0000,0000,,from the last element.
Dialogue: 0,0:19:12.01,0:19:13.24,*Default,NTP,0000,0000,0000,,So let's select that
Dialogue: 0,0:19:14.68,0:19:18.35,*Default,NTP,0000,0000,0000,,nav a link,
Dialogue: 0,0:19:18.35,0:19:20.77,*Default,NTP,0000,0000,0000,,and now you will see something new.
Dialogue: 0,0:19:20.77,0:19:24.01,*Default,NTP,0000,0000,0000,,So this here is a pseudo class, right.
Dialogue: 0,0:19:24.01,0:19:27.41,*Default,NTP,0000,0000,0000,,But on to that we can chain another pseudo class
Dialogue: 0,0:19:27.41,0:19:31.09,*Default,NTP,0000,0000,0000,,because now we want the last-child, right.
Dialogue: 0,0:19:32.15,0:19:35.83,*Default,NTP,0000,0000,0000,,Like this, and then we want to set the margin
Dialogue: 0,0:19:37.81,0:19:42.17,*Default,NTP,0000,0000,0000,,right back to zero, okay.
Dialogue: 0,0:19:42.17,0:19:43.81,*Default,NTP,0000,0000,0000,,So visually that changes nothing,
Dialogue: 0,0:19:43.81,0:19:47.63,*Default,NTP,0000,0000,0000,,but here we now see that this one no longer has dead space
Dialogue: 0,0:19:47.63,0:19:51.46,*Default,NTP,0000,0000,0000,,on the right side and many times that's important to do.
Dialogue: 0,0:19:51.46,0:19:54.62,*Default,NTP,0000,0000,0000,,And so that's why I wanted to show you that we can chain
Dialogue: 0,0:19:54.62,0:19:58.34,*Default,NTP,0000,0000,0000,,these to pseudo classes like this without any problem.
Dialogue: 0,0:19:58.34,0:20:01.14,*Default,NTP,0000,0000,0000,,Great, and now just to finish,
Dialogue: 0,0:20:01.14,0:20:03.43,*Default,NTP,0000,0000,0000,,I wanted to show you that images
Dialogue: 0,0:20:03.43,0:20:06.88,*Default,NTP,0000,0000,0000,,are actually inline-block boxes.
Dialogue: 0,0:20:06.88,0:20:07.92,*Default,NTP,0000,0000,0000,,All right.
Dialogue: 0,0:20:07.92,0:20:10.04,*Default,NTP,0000,0000,0000,,So I said in the beginning that images
Dialogue: 0,0:20:10.04,0:20:13.34,*Default,NTP,0000,0000,0000,,are actually inline elements, but in fact,
Dialogue: 0,0:20:13.34,0:20:16.96,*Default,NTP,0000,0000,0000,,they do behave like inline-block elements
Dialogue: 0,0:20:16.96,0:20:21.03,*Default,NTP,0000,0000,0000,,and we can easily demonstrate this by adding some margin,
Dialogue: 0,0:20:21.03,0:20:25.00,*Default,NTP,0000,0000,0000,,for example, to this post image here.
Dialogue: 0,0:20:25.00,0:20:29.95,*Default,NTP,0000,0000,0000,,So if I add a margin of a 100 pixels here,
Dialogue: 0,0:20:29.95,0:20:32.45,*Default,NTP,0000,0000,0000,,then if it was an inline element,
Dialogue: 0,0:20:32.45,0:20:35.53,*Default,NTP,0000,0000,0000,,it should not create any vertical space.
Dialogue: 0,0:20:35.53,0:20:39.31,*Default,NTP,0000,0000,0000,,So not here and not here. All right.
Dialogue: 0,0:20:39.31,0:20:41.64,*Default,NTP,0000,0000,0000,,But watch what happens as I save this.
Dialogue: 0,0:20:42.90,0:20:44.65,*Default,NTP,0000,0000,0000,,And so indeed you see
Dialogue: 0,0:20:44.65,0:20:47.60,*Default,NTP,0000,0000,0000,,that all of this vertical space here was added.
Dialogue: 0,0:20:48.46,0:20:51.13,*Default,NTP,0000,0000,0000,,And so that is proof that indeed
Dialogue: 0,0:20:51.13,0:20:53.85,*Default,NTP,0000,0000,0000,,it is an inline-block element
Dialogue: 0,0:20:53.85,0:20:55.91,*Default,NTP,0000,0000,0000,,and the same is true for the fact
Dialogue: 0,0:20:55.91,0:20:59.61,*Default,NTP,0000,0000,0000,,that we can set width and heights for this element.
Dialogue: 0,0:20:59.61,0:21:02.44,*Default,NTP,0000,0000,0000,,So if it was a purely inline element,
Dialogue: 0,0:21:02.44,0:21:06.05,*Default,NTP,0000,0000,0000,,then these two here would also not work, right.
Dialogue: 0,0:21:07.20,0:21:09.90,*Default,NTP,0000,0000,0000,,So that's also important to note
Dialogue: 0,0:21:09.90,0:21:12.63,*Default,NTP,0000,0000,0000,,and let's just set it back to normal here.
Dialogue: 0,0:21:13.48,0:21:18.48,*Default,NTP,0000,0000,0000,,Okay. So that's it for the type of boxes in CSS.
Dialogue: 0,0:21:18.86,0:21:20.41,*Default,NTP,0000,0000,0000,,Just as a quick summary
Dialogue: 0,0:21:20.41,0:21:24.12,*Default,NTP,0000,0000,0000,,or basically as a takeaway from this lecture,
Dialogue: 0,0:21:24.12,0:21:26.54,*Default,NTP,0000,0000,0000,,most of the time we will actually leave
Dialogue: 0,0:21:26.54,0:21:28.45,*Default,NTP,0000,0000,0000,,the display setting alone
Dialogue: 0,0:21:28.45,0:21:31.63,*Default,NTP,0000,0000,0000,,and simply use the predefined box type
Dialogue: 0,0:21:31.63,0:21:35.47,*Default,NTP,0000,0000,0000,,because by default, they do actually make a lot of sense.
Dialogue: 0,0:21:35.47,0:21:38.77,*Default,NTP,0000,0000,0000,,However, we can use display set to block
Dialogue: 0,0:21:38.77,0:21:41.41,*Default,NTP,0000,0000,0000,,in order to make a small inline element,
Dialogue: 0,0:21:41.41,0:21:44.47,*Default,NTP,0000,0000,0000,,for example, occupy an entire line,
Dialogue: 0,0:21:44.47,0:21:47.22,*Default,NTP,0000,0000,0000,,which is something that we will sometimes need
Dialogue: 0,0:21:47.22,0:21:48.87,*Default,NTP,0000,0000,0000,,in the real world.
Dialogue: 0,0:21:48.87,0:21:50.41,*Default,NTP,0000,0000,0000,,Then the other way around,
Dialogue: 0,0:21:50.41,0:21:53.56,*Default,NTP,0000,0000,0000,,sometimes we don't want a block-level element
Dialogue: 0,0:21:53.56,0:21:57.23,*Default,NTP,0000,0000,0000,,to push all the other elements into a new line.
Dialogue: 0,0:21:57.23,0:22:00.02,*Default,NTP,0000,0000,0000,,So basically we don't always want them to occupy
Dialogue: 0,0:22:00.02,0:22:03.75,*Default,NTP,0000,0000,0000,,all the available blank space that there is to fill.
Dialogue: 0,0:22:03.75,0:22:05.33,*Default,NTP,0000,0000,0000,,And so in that case,
Dialogue: 0,0:22:05.33,0:22:07.93,*Default,NTP,0000,0000,0000,,we can set them to an inline element
Dialogue: 0,0:22:07.93,0:22:10.35,*Default,NTP,0000,0000,0000,,or probably even more useful,
Dialogue: 0,0:22:10.35,0:22:12.96,*Default,NTP,0000,0000,0000,,we can set them to an inline-block element
Dialogue: 0,0:22:12.96,0:22:16.97,*Default,NTP,0000,0000,0000,,because then we can still apply the box model as usual.